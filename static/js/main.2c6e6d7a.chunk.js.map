{"version":3,"sources":["components/BackwardIcon/index.js","components/Button/index.js","components/Card/index.js","components/CreditCardPreview/index.js","components/Container/index.js","components/Form/index.js","components/Heading/index.js","components/Input/index.js","components/Label/index.js","components/Modal/index.js","components/Text/index.js","components/TrashCanIcon/index.js","constants/api.js","constants/route.js","constants/card.js","cardInfoFormatter.js","utils/deepCopy.js","utils/httpClient.js","utils/idGenerator.js","contexts/CardListContext.js","contexts/CardInfoContext.js","pages/ListPage/index.js","pages/AddPages/AddCompletePage/CardNicknameForm/index.js","pages/AddPages/AddCompletePage/index.js","pages/AddPages/AddFormPage/CardInfoForm/CardNumberInput.js","pages/AddPages/AddFormPage/CardInfoForm/ExpirationDateInput.js","pages/AddPages/AddFormPage/CardInfoForm/OwnerNameInput.js","images/cvc.png","pages/AddPages/AddFormPage/CardInfoForm/SecurityCodeInput.js","pages/AddPages/AddFormPage/CardInfoForm/PasswordInput.js","pages/AddPages/AddFormPage/CardInfoForm/validator.js","pages/AddPages/AddFormPage/CardInfoForm/index.js","pages/AddPages/AddFormPage/CardCompanySelectModal/index.js","pages/AddPages/AddFormPage/index.js","pages/AddPages/index.js","App.js","index.js"],"names":["BackwardIcon","size","color","strokeWidth","viewBox","height","width","fill","d","stroke","defaultProps","cx","classNames","bind","styles","Button","className","type","children","rest","Card","hasShadow","CreditCardPreview","props","companyColor","companyName","cardNumber","ownerName","expirationDate","style","backgroundColor","Container","containerClass","Form","Heading","as","classnames","Input","forwardRef","ref","container","displayName","Label","Modal","isOpen","Text","TrashCanIcon","xmlns","DB_BASE_URL","DB_ENDPOINT","POSTS","CARDS","HTTP_METHOD","ROUTE","FIRST","SECOND","CARD_NUMBER_MASKS","EXPIRATION_DATE_LENGTH","month","year","CARD_COMPANY_LIST","name","patterns","getFormattedCardInfo","cardInfo","number","isOwnerNameFilled","formattedNumber","getFormattedNumber","formattedExpirationDate","getFormattedExpirationDate","formattedOwnerName","getFormattedOwnerName","Object","values","some","fourDigit","length","first","second","join","deepCopy","obj","stringifiedObj","JSON","stringify","parse","error","console","httpClient","a","url","method","body","options","getOptions","fetch","response","ok","Error","json","defaultOptions","headers","CardListContext","createContext","CardListContextProvider","useState","cardList","setCardList","readCards","useEffect","addCard","card","newCard","prevList","deleteCard","cardId","filteredList","filter","v","id","Provider","value","resetCardList","initialCardInfo","third","fourth","company","securityCode","password","nickname","CardInfoContext","CardInfoContextProvider","setCardInfo","initialOwnerName","setNumber","prevState","setCompany","setExpirationDate","setOwnerName","setIsOwnerNameFilled","setSecurityCode","setPassword","setNickname","ListPage","useContext","history","useHistory","map","onClick","push","CardNicknameForm","initialNickname","useRef","current","focus","placeholder","onChange","e","slicedInputValue","target","slice","handleNicknameInputChange","disabled","preventDefault","handleNicknameSubmit","AddCompletePage","CardNumberInput","setIsModalOpen","refToBeFocusedNext","firstRef","secondRef","thirdRef","fourthRef","nextRef","handleCardNumberInputChange","onKeyDown","handleBlockInvalidChar","Separator","includes","key","inputName","firstSixDigits","find","setCardCompanyAfterValidation","ExpirationDateInput","monthRef","yearRef","handleExpirationDateInputChange","OwnerNameInput","_","maxLength","inputValueOnlyAlphabet","replace","regExpOnlyAlphabet","toUpperCase","handleOwnerNameInputChange","onBlur","handleOwnerNameInputBlur","SecurityCodeInput","passwordInputRef","handleSecurityCodeInputChange","src","cvcImage","alt","PasswordInput","Array","index","handlePasswordInputChange","isFormFulFilled","isNumberFulfilled","isExpirationDateFulfilled","isOwnerNameFulfilled","isSecurityCodeFulfilled","isPasswordFulfilled","CardInfoForm","expirationDateInputRef","ownerNameInputRef","initialCompany","isCardNameFulfilled","handleCardInfoSubmit","CardCompanySelectModal","currentTarget","ModalViewPort","firstChild","handleDimmedAreaClick","CardCompanyList","CardCompanyItem","handleCardCompanySelect","AddFormPage","isModalOpen","AddPages","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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A,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,6BACN3D,MAAO,qBACP4D,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACN3D,MAAO,oBACP4D,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACN3D,MAAO,mBACP4D,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACN3D,MAAO,qBACP4D,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACN3D,MAAO,qBACP4D,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACN3D,MAAO,oBACP4D,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,iBACN3D,MAAO,oBACP4D,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,YChbOC,GAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7BC,EAAyDD,EAAzDC,OAAQrC,EAAiDoC,EAAjDpC,eAAgBD,EAAiCqC,EAAjCrC,UAAWuC,EAAsBF,EAAtBE,kBAE3C,MAAO,CACLC,gBAAiBC,GAAmB,CAAEH,WACtCI,wBAAyBC,GAA2B,CAAE1C,mBACtD2C,mBAAoBC,GAAsB,CAAE7C,YAAWuC,wBAIrDE,GAAqB,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OAC5B,OAA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","file":"static/js/main.2c6e6d7a.chunk.js","sourcesContent":["/* eslint-disable react/jsx-curly-brace-presence */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const BackwardIcon = ({ size, color, strokeWidth }) => {\n  return (\n    <svg viewBox={`0 0 ${size} ${size}`} height={size} width={size} fill=\"none\">\n      <path\n        d={`\n              M ${size / 2} 1 \n              L 1 ${size / 2} \n              L ${size / 2} ${size}`}\n        stroke={color}\n        strokeWidth={strokeWidth}\n      />\n    </svg>\n  );\n};\n\nBackwardIcon.propTypes = {\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  strokeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nBackwardIcon.defaultProps = {\n  size: 16,\n  strokeWidth: 1.5,\n  color: '#525252',\n};\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Button = ({ className, type, children, ...rest }) => {\n  return (\n    <button className={cx(['Button', className])} type={type} {...rest}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.oneOf(['submit', 'reset', 'button']).isRequired,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nButton.defaultProps = {\n  type: 'submit',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Card = ({ className, hasShadow, children, ...rest }) => {\n  return (\n    <div className={cx('Card', { 'Card--shadow': hasShadow }, className)} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nCard.propTypes = {\n  className: PropTypes.string,\n  hasShadow: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { Card } from '..';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const CreditCardPreview = (props) => {\n  const { className, companyColor, companyName, cardNumber, ownerName, expirationDate } = props;\n  return (\n    <div className={cx('CreditCardPreview', className)}>\n      <Card style={{ backgroundColor: companyColor }} hasShadow>\n        <div className=\"CreditCardPreview__Wrapper\">\n          <span className=\"CreditCardPreview__CardCompany\"> {companyName}</span>\n          <Card className=\"CreditCardPreview__IC_Chip\" />\n          <span className=\"CreditCardPreview__CardNumber\"> {cardNumber}</span>\n          <div className=\"CreditCardPreview__Line\">\n            <span className=\"CreditCardPreview__OwnerName\"> {ownerName}</span>\n            <span className=\"CreditCardPreview__ExpirationDate\"> {expirationDate}</span>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nCreditCardPreview.propTypes = {\n  className: PropTypes.string,\n  companyColor: PropTypes.string.isRequired,\n  companyName: PropTypes.string.isRequired,\n  cardNumber: PropTypes.string.isRequired,\n  ownerName: PropTypes.string.isRequired,\n  expirationDate: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Container = ({ className, children, ...rest }) => {\n  const containerClass = cx('Container', className);\n\n  return (\n    <div className={containerClass} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ className, children, ...props }) => {\n  return (\n    <form className={className} {...props}>\n      {children}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Heading = ({ as, className, style, children, ...rest }) => {\n  switch (as) {\n    case 'h1':\n      return (\n        <h1 className={cx('Heading', className)} {...rest}>\n          {children}\n        </h1>\n      );\n    case 'h2':\n      return (\n        <h2 className={cx('Heading', className)} {...rest}>\n          {children}\n        </h2>\n      );\n    case 'h3':\n      return (\n        <h3 className={cx('Heading', className)} {...rest}>\n          {children}\n        </h3>\n      );\n    case 'h4':\n      return (\n        <h4 className={cx('Heading', className)} {...rest}>\n          {children}\n        </h4>\n      );\n    case 'h5':\n      return (\n        <h5 className={cx('Heading', className)} {...rest}>\n          {children}\n        </h5>\n      );\n    case 'h6':\n      return (\n        <h6 className={cx('Heading', className)} {...rest}>\n          {children}\n        </h6>\n      );\n    default:\n      return (\n        <h2 className={cx('Heading', className)} {...rest}>\n          {children}\n        </h2>\n      );\n  }\n};\n\nHeading.propTypes = {\n  as: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  className: PropTypes.string,\n  style: PropTypes.shape({\n    color: PropTypes.string,\n    textAlign: PropTypes.string,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    fontWeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    letterSpacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    wordSpacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    textIndent: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    lineHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  }),\n  children: PropTypes.string.isRequired,\n};\n\nHeading.defaultProps = {\n  as: 'h2',\n};\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { Container } from '..';\nimport styles from './style.css';\n\nconst cx = classnames.bind(styles);\n\nexport const Input = forwardRef(({ container, className, ...rest }, ref) => {\n  if (container) {\n    return (\n      <Container className={container}>\n        <input className={cx('Input', className)} {...rest} ref={ref} />\n      </Container>\n    );\n  }\n  return <input className={cx('Input', className)} {...rest} ref={ref} />;\n});\n\nInput.propTypes = {\n  container: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  type: PropTypes.oneOf([\n    'submit',\n    'button',\n    'reset',\n    'text',\n    'number',\n    'password',\n    'checkbox',\n    'radio',\n    'color',\n    'search',\n    'month',\n    'week',\n    'date',\n    'time',\n    'datetime-local',\n    'range',\n    'url',\n    'tel',\n    'email',\n    'file',\n    'image',\n    'hidden',\n  ]).isRequired,\n};\n\nInput.defaultProps = {\n  type: 'text',\n};\n\nInput.displayName = 'Input';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classnames.bind(styles);\n\nexport const Label = ({ className, children, ...rest }) => {\n  return (\n    <label className={cx('Label', className)} {...rest}>\n      {children}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classnames.bind(styles);\n\nexport const Modal = ({ isOpen, className, style, children, ...rest }) => {\n  return (\n    <div className={cx('Modal', { 'Modal--open': isOpen })} {...rest}>\n      <div className=\"Modal__ViewPort\">\n        <div className={cx('Modal__Content', className)} style={style}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  className: PropTypes.string,\n  styles: PropTypes.object,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Text = ({ className, children, ...rest }) => {\n  return (\n    <span className={cx('Text', className)} {...rest}>\n      {children}\n    </span>\n  );\n};\n\nText.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TrashCanIcon = (props) => {\n  const { width, color, ...rest } = props;\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width} viewBox=\"0 0 22 22\" fill=\"none\" {...rest}>\n      <path\n        d=\"M8.4 10L8.4 17M13.4 10V17M4.88636 4V2.68775C4.88636 2.24685 5.0589 1.82345 5.36706 1.50813C5.68461 1.18318 6.11977 1 6.57412 1H14.9259C15.3802 1 15.8154 1.18318 16.1329 1.50813C16.4411 1.82345 16.6136 2.24685 16.6136 2.68775V4M21.5 4.9H0M2.5 7V18.5451C2.5 19.1593 2.73024 19.7512 3.14527 20.2039C3.61025 20.7112 4.26679 21 4.95493 21H16.5451C17.2332 21 17.8897 20.7112 18.3547 20.2039C18.7698 19.7512 19 19.1593 19 18.5451V7\"\n        stroke={color}\n        strokeWidth=\"1.8\"\n      />\n    </svg>\n  );\n};\n\nTrashCanIcon.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  color: PropTypes.string,\n};\n\nTrashCanIcon.defaultProps = {\n  width: 22,\n  color: '#BBBBBB',\n};\n","const DB_BASE_URL = 'https://react-payments-project.herokuapp.com';\n\nexport const DB_ENDPOINT = {\n  POSTS: `${DB_BASE_URL}/posts`,\n  CARDS: `${DB_BASE_URL}/cards`,\n};\n\nexport const HTTP_METHOD = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  DELETE: 'delete',\n};\n","export const ROUTE = {\n  HOME: '/',\n  LIST: '/list',\n  ADD: '/add',\n  ADD_COMPLETE: '/add/complete',\n};\n","export const FIRST = 'first';\nexport const SECOND = 'second';\n\nexport const MONTH = 'month';\nexport const YEAR = 'year';\nexport const SLASH = '/';\n\nexport const INITIAL_FORMATTED_CARD_NUMBER = '';\nexport const FORMATTED_CARD_NUMBER_LENGTH = 19;\nexport const CARD_NUMBER_UNIT_LENGTH = 4;\nexport const CARD_NUMBER_MASKS = '····';\n\nexport const INITIAL_FORMATTED_EXPIRATION_MONTH = 'MM';\nexport const INITIAL_FORMATTED_EXPIRATION_YEAR = 'YY';\nexport const FORMATTED_EXPIRATION_DATE_LENGTH = 5;\nexport const EXPIRATION_DATE_LENGTH = { month: 2, year: 2 };\n\nexport const INITIAL_FORMATTED_OWNER_NAME = 'NAME';\nexport const MAX_OWNER_NAME_LENGTH = 30;\n\nexport const SECURITY_CODE_LENGTH = 3;\n\nexport const PASSWORD_UNIT_LENGTH = 1;\nexport const FORMATTED_PASSWORD_LENGTH = 2;\n\nexport const MAX_NICKNAME_LENGTH = 10;\n\nexport const CARD_COMPANY_LIST = [\n  {\n    name: 'KB국민카드',\n    color: 'rgb(84, 124, 228)',\n    patterns: [\n      '356415',\n      '356912',\n      '376364',\n      '376365',\n      '425863',\n      '433290',\n      '455306',\n      '457973',\n      '467309',\n      '502123',\n      '516453',\n      '520504',\n      '522971',\n      '523612',\n      '527289',\n      '536326',\n      '536510',\n      '537706',\n      '540926',\n      '540947',\n      '554959',\n      '557042',\n      '589808',\n      '623374',\n      '625006',\n      '625804',\n      '943646',\n      '944541',\n      '944542',\n      '949098',\n      '949094',\n      '949099',\n      '949103',\n    ],\n  },\n  {\n    name: 'NH농협카드',\n    color: 'rgb(148, 218, 205)',\n    patterns: [\n      '356516',\n      '407916',\n      '407917',\n      '409216',\n      '409217',\n      '470616',\n      '470617',\n      '485479',\n      '485480',\n      '490611',\n      '490612',\n      '538811',\n      '538812',\n      '542416',\n      '542454',\n      '542586',\n      '546111',\n      '546112',\n      '552111',\n      '552112',\n      '559434',\n      '559438',\n      '621011',\n      '621012',\n      '624363',\n      '625111',\n      '625112',\n      '636093',\n      '657311',\n      '657312',\n      '941116',\n      '941117',\n      '942011',\n      '942012',\n      '943016',\n      '943017',\n      '943116',\n      '943117',\n      '944011',\n      '944012',\n      '944111',\n      '944112',\n      '944116',\n      '944117',\n      '944711',\n      '944712',\n      '946316',\n    ],\n  },\n  {\n    name: '삼성카드',\n    color: 'rgb(222, 89, 185)',\n    patterns: [\n      '377989',\n      '379183',\n      '400913',\n      '451245',\n      '458532',\n      '463732',\n      '4689',\n      '4705',\n      '474289',\n      '512365',\n      '518831',\n      '536125',\n      '536148',\n      '536648',\n      '536181',\n      '552014',\n      '624411',\n      '625817',\n      '941029',\n      '941088',\n      '942101',\n    ],\n  },\n  {\n    name: '신한카드',\n    color: 'rgb(226, 65, 65)',\n    patterns: [\n      '356297',\n      '356907',\n      '356878',\n      '377178',\n      '377983',\n      '377988',\n      '400772',\n      '403965',\n      '404678',\n      '422155',\n      '429612',\n      '430972',\n      '434976',\n      '436420',\n      '438676',\n      '449914',\n      '445090',\n      '451842',\n      '451845',\n      '454478',\n      '460561',\n      '461954',\n      '465887',\n      '472175',\n      '472246',\n      '478292',\n      '486678',\n      '510737',\n      '511187',\n      '515594',\n      '517134',\n      '521189',\n      '528638',\n      '535180',\n      '537943',\n      '538413',\n      '542879',\n      '549840',\n      '559410',\n      '589807',\n      '605609',\n      '606045',\n      '621078',\n      '624331',\n      '624348',\n      '625178',\n      '941061',\n      '941080',\n      '941082',\n      '941083',\n      '941161',\n      '942062',\n      '942073',\n      '942078',\n      '944078',\n    ],\n  },\n  {\n    name: '하나카드',\n    color: 'rgb(231, 110, 154)',\n    patterns: [\n      '356543',\n      '356545',\n      '357104',\n      '371001',\n      '377969',\n      '379192',\n      '402367',\n      '408966',\n      '411904',\n      '414025',\n      '416206',\n      '416207',\n      '416262',\n      '420189',\n      '420707',\n      '4289',\n      '4336',\n      '448125',\n      '450596',\n      '455437',\n      '459900',\n      '459930',\n      '461771',\n      '465306',\n      '465583',\n      '490625',\n      '493455',\n      '502928',\n      '511845',\n      '518185',\n      '523830',\n      '524242',\n      '524335',\n      '531838',\n      '532092',\n      '538661',\n      '541707',\n      '546252',\n      '552125',\n      '552323',\n      '553177',\n      '621025',\n      '621079',\n      '624435',\n      '624436',\n      '626261',\n      '941051',\n      '941052',\n      '941053',\n      '941181',\n      '941581',\n      '942025',\n      '944025',\n      '944081',\n    ],\n  },\n  {\n    name: '우리카드',\n    color: 'rgb(115, 188, 109)',\n    patterns: [\n      '404720',\n      '408320',\n      '412020',\n      '406107',\n      '421420',\n      '4326',\n      '447820',\n      '490220',\n      '514043',\n      '515954',\n      '536320',\n      '537102',\n      '538720',\n      '538920',\n      '548020',\n      '552220',\n      '553820',\n      '5589',\n      '605615',\n      '636094',\n      '621020',\n      '623393',\n      '625320',\n      '621020',\n      '655620',\n      '657020',\n      '942520',\n      '943520',\n      '944420',\n      '944520',\n      '947124',\n    ],\n  },\n  {\n    name: '현대카드',\n    color: 'rgb(243, 125, 59)',\n    patterns: [\n      '361653',\n      '402857',\n      '403302',\n      '404947',\n      '413526',\n      '4172',\n      '418143',\n      '433028',\n      '435661',\n      '438265',\n      '489016',\n      '512114',\n      '523930',\n      '532793',\n      '543333',\n      '550347',\n      '552290',\n      '552376',\n      '624368',\n      '943133',\n      '943135',\n      '949019',\n      '949013',\n      '949015',\n      '949018',\n      '949085',\n      '949097',\n    ],\n  },\n  {\n    name: 'BC카드',\n    color: 'rgb(251, 205, 88)',\n    patterns: [\n      '356003',\n      '404803',\n      '405203',\n      '419803',\n      '427203',\n      '447703',\n      '490603',\n      '496603',\n      '538803',\n      '538903',\n      '531194',\n      '552103',\n      '558903',\n      '621003',\n      '624303',\n      '625103',\n      '655603',\n      '942003',\n      '944003',\n      '944603',\n      '970003',\n      '416339',\n      '552139',\n      '655639',\n      '657339',\n      '970039',\n      '517548',\n      '538832',\n      '552132',\n      '621032',\n      '625132',\n      '657332',\n      '655632',\n      '944032',\n      '551431',\n      '621031',\n      '657331',\n      '944031',\n      '946031',\n      '970031',\n      '411171',\n      '538159',\n      '626275',\n      '624414',\n      '935071',\n      '944071',\n      '409085',\n      '448123',\n      '521176',\n      '523527',\n      '536323',\n      '552123',\n      '559123',\n      '604823',\n      '621023',\n      '655623',\n      '935023',\n      '459951',\n      '463916',\n      '657316',\n      '9035',\n      '459912',\n      '465613',\n      '453261',\n      '485462',\n      '941696',\n      '944096',\n      '944696',\n      '941648',\n      '944648',\n      '944948',\n      '944949',\n      '949048',\n      '949049',\n      '536886',\n      '621640',\n      '625243',\n      '427352',\n      '944045',\n      '970045',\n      '941691',\n      '944691',\n      '944063',\n      '944009',\n      '944079',\n      '944061',\n      '944080',\n      '941643',\n      '944030',\n      '944095',\n      '455320',\n      '625120',\n      '943020',\n      '546465',\n      '941642',\n      '944192',\n      '930144',\n      '946044',\n      '946144',\n      '946544',\n      '946644',\n      '621249',\n    ],\n  },\n];\n","import {\n  INITIAL_FORMATTED_CARD_NUMBER,\n  CARD_NUMBER_UNIT_LENGTH,\n  CARD_NUMBER_MASKS,\n  INITIAL_FORMATTED_EXPIRATION_MONTH,\n  INITIAL_FORMATTED_EXPIRATION_YEAR,\n  FORMATTED_EXPIRATION_DATE_LENGTH,\n  SLASH,\n  INITIAL_FORMATTED_OWNER_NAME,\n} from './constants';\n\nexport const getFormattedCardInfo = ({ cardInfo }) => {\n  const { number, expirationDate, ownerName, isOwnerNameFilled } = cardInfo;\n\n  return {\n    formattedNumber: getFormattedNumber({ number }),\n    formattedExpirationDate: getFormattedExpirationDate({ expirationDate }),\n    formattedOwnerName: getFormattedOwnerName({ ownerName, isOwnerNameFilled }),\n  };\n};\n\nconst getFormattedNumber = ({ number }) => {\n  if (Object.values(number).some((fourDigit) => fourDigit.length !== CARD_NUMBER_UNIT_LENGTH)) {\n    return INITIAL_FORMATTED_CARD_NUMBER;\n  }\n  return [number.first, number.second, CARD_NUMBER_MASKS, CARD_NUMBER_MASKS].join(' ');\n};\n\nconst getFormattedExpirationDate = ({ expirationDate }) => {\n  const formattedExpirationDate = Object.values(expirationDate).join(SLASH);\n\n  if (\n    formattedExpirationDate.length < FORMATTED_EXPIRATION_DATE_LENGTH ||\n    expirationDate.month === '' ||\n    expirationDate.year === ''\n  ) {\n    return `${INITIAL_FORMATTED_EXPIRATION_MONTH}${SLASH}${INITIAL_FORMATTED_EXPIRATION_YEAR}`;\n  }\n  return formattedExpirationDate;\n};\n\nconst getFormattedOwnerName = ({ ownerName, isOwnerNameFilled }) => {\n  if (!isOwnerNameFilled) {\n    return INITIAL_FORMATTED_OWNER_NAME;\n  }\n  return ownerName;\n};\n","export const deepCopy = (obj) => {\n  try {\n    const stringifiedObj = JSON.stringify(obj);\n    return JSON.parse(stringifiedObj);\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { HTTP_METHOD } from '../constants';\n\nexport const httpClient = async ({ url, method = HTTP_METHOD.GET, body }) => {\n  const options = getOptions(method, body);\n\n  try {\n    const response = await fetch(url, options);\n\n    if (!response.ok) {\n      throw new Error('HTTP 요청 실패');\n    }\n    const body = await response.json();\n\n    return body;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nfunction getOptions(method, body) {\n  const defaultOptions = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  switch (method) {\n    case HTTP_METHOD.GET:\n      return defaultOptions;\n\n    case HTTP_METHOD.DELETE:\n      return defaultOptions;\n\n    default:\n      return {\n        ...defaultOptions,\n        body,\n      };\n  }\n}\n","export const idGenerator = () => {\n  const now = new Date();\n\n  const YYYY = now.getFullYear().toString();\n  const MM = now.getMonth().toString().padStart(2, '0');\n  const DD = now.getDate().toString().padStart(2, '0');\n  const hh = now.getHours().toString().padStart(2, '0');\n  const mm = now.getMinutes().toString().padStart(2, '0');\n  const ss = now.getSeconds().toString().padStart(2, '0');\n\n  return `${YYYY}${MM}${DD}${hh}${mm}${ss}`;\n};\n","import { useState, createContext, useEffect } from 'react';\nimport { deepCopy, httpClient } from '../utils';\nimport { DB_ENDPOINT, HTTP_METHOD } from '../constants';\n\nconst url = DB_ENDPOINT.CARDS;\n\nexport const CardListContext = createContext();\n\nexport const CardListContextProvider = ({ children }) => {\n  const [cardList, setCardList] = useState([]);\n\n  const readCards = async () => {\n    try {\n      const body = await httpClient({ url, method: HTTP_METHOD.GET });\n\n      setCardList(() => body);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    readCards();\n  }, []);\n\n  const addCard = async (card) => {\n    const newCard = { ...deepCopy(card) };\n\n    try {\n      const body = await httpClient({\n        url,\n        method: HTTP_METHOD.POST,\n        body: JSON.stringify(newCard),\n      });\n\n      setCardList((prevList) => [...prevList, body]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deleteCard = async (cardId) => {\n    const filteredList = [...cardList].filter((v) => v.id !== cardId);\n\n    try {\n      await httpClient({ url: `${url}/${cardId}`, method: HTTP_METHOD.DELETE });\n\n      setCardList(() => filteredList);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const resetCardList = () => setCardList(() => []);\n\n  return (\n    <CardListContext.Provider value={{ cardList, setCardList, addCard, deleteCard, resetCardList }}>\n      {children}\n    </CardListContext.Provider>\n  );\n};\n","import { useState, createContext } from 'react';\n\nconst initialCardInfo = {\n  number: { first: '', second: '', third: '', fourth: '' },\n  company: { name: '', color: '' },\n  expirationDate: { month: '', year: '' },\n  ownerName: '',\n  isOwnerNameFilled: false,\n  securityCode: '',\n  password: { first: '', second: '' },\n  nickname: '',\n};\n\nexport const CardInfoContext = createContext();\n\nexport const CardInfoContextProvider = ({ children }) => {\n  const [cardInfo, setCardInfo] = useState(initialCardInfo);\n\n  const setNumber = (number) => setCardInfo((prevState) => ({ ...prevState, number }));\n  const setCompany = (company) => setCardInfo((prevState) => ({ ...prevState, company }));\n  const setExpirationDate = (expirationDate) => setCardInfo((prevState) => ({ ...prevState, expirationDate }));\n  const setOwnerName = (ownerName) => setCardInfo((prevState) => ({ ...prevState, ownerName }));\n  const setIsOwnerNameFilled = (isOwnerNameFilled) => setCardInfo((prevState) => ({ ...prevState, isOwnerNameFilled }));\n  const setSecurityCode = (securityCode) => setCardInfo((prevState) => ({ ...prevState, securityCode }));\n  const setPassword = (password) => setCardInfo((prevState) => ({ ...prevState, password }));\n  const setNickname = (nickname) => setCardInfo((prevState) => ({ ...prevState, nickname }));\n\n  return (\n    <CardInfoContext.Provider\n      value={{\n        cardInfo,\n        ...cardInfo,\n        initialCardInfo,\n        initialOwnerName: initialCardInfo.ownerName,\n        setCardInfo,\n        setNumber,\n        setCompany,\n        setExpirationDate,\n        setOwnerName,\n        setIsOwnerNameFilled,\n        setSecurityCode,\n        setPassword,\n        setNickname,\n      }}\n    >\n      {children}\n    </CardInfoContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Card, CreditCardPreview, Text, TrashCanIcon, Heading } from '../../components';\nimport { getFormattedCardInfo } from '../../cardInfoFormatter';\nimport { CardListContext } from '../../contexts';\nimport { ROUTE } from '../../constants';\nimport './style.css';\n\nexport const ListPage = () => {\n  const { cardList, deleteCard } = useContext(CardListContext);\n  const history = useHistory();\n  const handleAddButtonClick = () => history.push(ROUTE.ADD);\n\n  return (\n    <div className=\"ListPage\">\n      <Heading className=\"ListPage__Heading\">보유카드</Heading>\n      <ul className=\"List\">\n        {cardList?.map((cardInfo) => {\n          const { company, nickname, id } = cardInfo;\n          const { formattedNumber, formattedExpirationDate, formattedOwnerName } = getFormattedCardInfo({ cardInfo });\n          return (\n            <li key={id} className=\"ListItem__Card\">\n              <CreditCardPreview\n                companyColor={company.color}\n                companyName={company.name}\n                cardNumber={formattedNumber}\n                ownerName={formattedOwnerName}\n                expirationDate={formattedExpirationDate}\n              />\n              <span className=\"ListItem__Card__Nickname\">{nickname}</span>\n              <Button className=\"ListItem__Card__DeleteButton\">\n                <TrashCanIcon width=\"1.1rem\" color=\"#888\" onClick={() => deleteCard(id)} />\n              </Button>\n            </li>\n          );\n        })}\n        <li className=\"ListItem__Add\">\n          <Button className=\"ListItem__Add__Button\" onClick={handleAddButtonClick}>\n            <Card>\n              <Text className=\"ListItem__Add__Sign\">+</Text>\n            </Card>\n          </Button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useRef, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CardInfoContext, CardListContext } from '../../../../contexts';\nimport { Button, Form, Input } from '../../../../components';\nimport { MAX_NICKNAME_LENGTH, ROUTE } from '../../../../constants';\n\nexport const CardNicknameForm = () => {\n  const { cardInfo, nickname, setNickname, initialNickname } = useContext(CardInfoContext);\n  const { addCard } = useContext(CardListContext);\n  const ref = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    ref.current?.focus();\n  }, []);\n\n  return (\n    <Form className=\"CardNicknameForm\">\n      <Input\n        className=\"CardNicknameInput__Field\"\n        placeholder=\"카드 별칭\"\n        container=\"CardNicknameInput__Filler--transparent\"\n        value={nickname}\n        ref={ref}\n        onChange={(e) => handleNicknameInputChange({ e, setNickname })}\n      />\n      <Button\n        className=\"CardNicknameForm__Submit_Button\"\n        disabled={nickname === initialNickname}\n        onClick={(e) => handleNicknameSubmit({ e, cardInfo, addCard, history })}\n      >\n        확인\n      </Button>\n    </Form>\n  );\n};\n\nfunction handleNicknameInputChange({ e, setNickname }) {\n  const slicedInputValue = e.target.value.slice(0, MAX_NICKNAME_LENGTH);\n  setNickname(slicedInputValue);\n}\n\nfunction handleNicknameSubmit({ e, cardInfo, addCard, history }) {\n  e.preventDefault();\n\n  addCard(cardInfo);\n  history.push(ROUTE.HOME);\n}\n","import { useContext } from 'react';\nimport { CardInfoContext } from '../../../contexts';\nimport { CreditCardPreview, Text } from '../../../components';\nimport { CardNicknameForm } from './CardNicknameForm';\nimport { getFormattedCardInfo } from '../../../cardInfoFormatter';\nimport './style.css';\n\nexport const AddCompletePage = () => {\n  const { cardInfo, company } = useContext(CardInfoContext);\n  const { formattedNumber, formattedExpirationDate, formattedOwnerName } = getFormattedCardInfo({ cardInfo });\n\n  return (\n    <div>\n      <Text className=\"AddCompletePage__Text\">카드등록이 완료되었습니다.</Text>\n      <CreditCardPreview\n        className=\"AddCompletePage__CreditCardPreview\"\n        companyColor={company.color}\n        companyName={company.name}\n        cardNumber={formattedNumber}\n        ownerName={formattedOwnerName}\n        expirationDate={formattedExpirationDate}\n      />\n      <CardNicknameForm />\n    </div>\n  );\n};\n","import { useRef, useEffect, useContext } from 'react';\nimport { CardInfoContext } from '../../../../contexts';\nimport { Container, Input, Label, Text } from '../../../../components';\nimport { CARD_NUMBER_UNIT_LENGTH, CARD_COMPANY_LIST, SECOND } from '../../../../constants';\n\nexport const CardNumberInput = (props) => {\n  const { setIsModalOpen, refToBeFocusedNext } = props;\n  const { number, setNumber, setCompany } = useContext(CardInfoContext);\n\n  const firstRef = useRef();\n  const secondRef = useRef();\n  const thirdRef = useRef();\n  const fourthRef = useRef();\n  const nextRef = {\n    first: secondRef,\n    second: thirdRef,\n    third: fourthRef,\n    fourth: refToBeFocusedNext,\n  };\n\n  useEffect(() => {\n    firstRef.current?.focus();\n  }, []);\n\n  return (\n    <>\n      <Label>카드 번호</Label>\n      <Container className=\"CardNumberInput__Filler CardInfoForm__Input__Filler--filled\">\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"number\"\n          ref={firstRef}\n          name=\"first\"\n          value={number.first}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n        <Separator length={number.first.length} />\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"number\"\n          ref={secondRef}\n          name=\"second\"\n          value={number.second}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n        <Separator length={number.second.length} />\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"password\"\n          ref={thirdRef}\n          name=\"third\"\n          value={number.third}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n        <Separator length={number.third.length} />\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"password\"\n          ref={fourthRef}\n          name=\"fourth\"\n          value={number.fourth}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n      </Container>\n    </>\n  );\n};\n\nfunction Separator({ length }) {\n  const classnames =\n    length === CARD_NUMBER_UNIT_LENGTH\n      ? 'CardNumberInput__Separator'\n      : 'CardNumberInput__Separator CardNumberInput__Separator--hidden';\n\n  return <Text className={classnames}>-</Text>;\n}\n\nfunction handleBlockInvalidChar(e) {\n  if (['e', 'E', '+', '-'].includes(e.key)) {\n    e.preventDefault();\n  }\n}\n\nfunction handleCardNumberInputChange(props) {\n  const { e, number, setNumber, setCompany, nextRef, setIsModalOpen } = props;\n  const inputName = e.target.name;\n  const slicedInputValue = e.target.value.slice(0, CARD_NUMBER_UNIT_LENGTH);\n\n  if (slicedInputValue.length === CARD_NUMBER_UNIT_LENGTH) {\n    nextRef[inputName]?.current.focus();\n  }\n  setNumber({ ...number, [inputName]: slicedInputValue });\n  setCardCompanyAfterValidation({\n    number,\n    setCompany,\n    slicedInputValue,\n    inputName,\n    setIsModalOpen,\n  });\n}\n\nfunction setCardCompanyAfterValidation(props) {\n  const { inputName, slicedInputValue, number, setCompany, setIsModalOpen } = props;\n\n  if (\n    inputName !== SECOND ||\n    slicedInputValue.length < CARD_NUMBER_UNIT_LENGTH ||\n    number.first < CARD_NUMBER_UNIT_LENGTH\n  ) {\n    return;\n  }\n\n  const firstSixDigits = number.first + slicedInputValue.slice(0, 2);\n  const company = CARD_COMPANY_LIST.find((company) => company.patterns.includes(firstSixDigits));\n\n  if (!company) {\n    setIsModalOpen(true);\n    return;\n  }\n  setCompany({ name: company.name, color: company.color });\n}\n","import { useRef, forwardRef, useContext } from 'react';\nimport { CardInfoContext } from '../../../../contexts';\nimport { Container, Input, Label, Text } from '../../../../components';\nimport { MONTH, YEAR, EXPIRATION_DATE_LENGTH } from '../../../../constants';\n\nexport const ExpirationDateInput = forwardRef((props, monthRef) => {\n  const { refToBeFocusedNext } = props;\n  const { expirationDate, setExpirationDate } = useContext(CardInfoContext);\n\n  const yearRef = useRef();\n  const nextRef = {\n    month: yearRef,\n    year: refToBeFocusedNext,\n  };\n\n  return (\n    <>\n      <Label>만료일</Label>\n      <Container className=\"CardInfoForm__Input__Filler--filled ExpirationDateInput__Filler\">\n        <Input\n          className=\"ExpirationDateInput__Field\"\n          placeholder=\"MM\"\n          type=\"number\"\n          name={MONTH}\n          ref={monthRef}\n          value={expirationDate.month}\n          onChange={(e) => handleExpirationDateInputChange({ e, expirationDate, setExpirationDate, nextRef })}\n        />\n        <Text className=\"ExpirationDateInput__Separator\">/</Text>\n        <Input\n          className=\"ExpirationDateInput__Field\"\n          placeholder=\"YY\"\n          type=\"number\"\n          name={YEAR}\n          ref={yearRef}\n          value={expirationDate.year}\n          onChange={(e) => handleExpirationDateInputChange({ e, expirationDate, setExpirationDate, nextRef })}\n        />\n      </Container>\n    </>\n  );\n});\n\nfunction handleExpirationDateInputChange(props) {\n  const { e, expirationDate, setExpirationDate, nextRef } = props;\n  const inputName = e.target.name;\n  const slicedInputValue = e.target.value.slice(0, EXPIRATION_DATE_LENGTH[inputName]);\n\n  if (slicedInputValue.length === EXPIRATION_DATE_LENGTH[inputName]) {\n    nextRef[inputName]?.current.focus();\n  }\n  setExpirationDate({ ...expirationDate, [inputName]: slicedInputValue });\n}\n\nExpirationDateInput.displayName = 'ExpirationDateInput';\n","import { forwardRef, useContext } from 'react';\nimport { CardInfoContext } from '../../../../contexts';\nimport { Input, Label, Text } from '../../../../components';\nimport { MAX_OWNER_NAME_LENGTH } from '../../../../constants';\n\nexport const OwnerNameInput = forwardRef((_, ref) => {\n  const { initialOwnerName, ownerName, setOwnerName, setIsOwnerNameFilled } = useContext(CardInfoContext);\n\n  return (\n    <>\n      <div className=\"OwnerNameInput__Header\">\n        <Label>카드 소유자 이름(선택)</Label>\n        <Text className=\"OwnerNameInput__Header__Text\">{`${ownerName.length}/${MAX_OWNER_NAME_LENGTH}`}</Text>\n      </div>\n      <Input\n        className=\"OwnerNameInput__Field\"\n        container=\"OwnerNameInput__Filler CardInfoForm__Input__Filler--filled\"\n        placeholder=\"카드에 표시된 이름과 동일하게 입력하세요.\"\n        name=\"ownerNameInput\"\n        maxLength={MAX_OWNER_NAME_LENGTH}\n        ref={ref}\n        value={ownerName === initialOwnerName ? '' : ownerName}\n        onChange={(e) => handleOwnerNameInputChange({ e, setOwnerName })}\n        onBlur={(e) => handleOwnerNameInputBlur({ e, setIsOwnerNameFilled })}\n      />\n    </>\n  );\n});\n\nconst regExpOnlyAlphabet = /[^a-zA-Z ]+/g;\n\nfunction handleOwnerNameInputChange(props) {\n  const { e, setOwnerName } = props;\n  const inputValue = e.target.value;\n  const inputValueOnlyAlphabet = inputValue.replace(regExpOnlyAlphabet, '');\n\n  setOwnerName(inputValueOnlyAlphabet.toUpperCase());\n}\n\nexport const handleOwnerNameInputBlur = ({ setIsOwnerNameFilled }) => {\n  setIsOwnerNameFilled(true);\n};\n\nOwnerNameInput.displayName = 'OwnerNameInput';\n","export default __webpack_public_path__ + \"static/media/cvc.c772b326.png\";","import { useContext } from 'react';\nimport { CardInfoContext } from '../../../../contexts';\nimport { Button, Input, Label } from '../../../../components';\nimport { SECURITY_CODE_LENGTH } from '../../../../constants';\nimport cvcImage from '../../../../images/cvc.png';\n\nexport const SecurityCodeInput = (props) => {\n  const { refToBeFocusedNext } = props;\n  const { securityCode, setSecurityCode } = useContext(CardInfoContext);\n\n  return (\n    <>\n      <Label>보안 코드(CVC/CVV)</Label>\n      <div className=\"SecurityCodeInput__Wrapper\">\n        <Input\n          className=\"SecurityCodeInput__Field\"\n          container=\"CardInfoForm__Input__Filler--filled SecurityCodeInput__Filler\"\n          type=\"password\"\n          onChange={(e) => handleSecurityCodeInputChange({ e, setSecurityCode, passwordInputRef: refToBeFocusedNext })}\n          maxLength={SECURITY_CODE_LENGTH}\n          value={securityCode}\n        />\n        <Button className=\"SecurityCodeInput__Guide__Button\" type=\"button\">\n          ?\n        </Button>\n        <img className=\"SecurityCodeInput__Guide__Image\" width=\"80\" src={cvcImage} alt=\"cvc\" />\n      </div>\n    </>\n  );\n};\n\nfunction handleSecurityCodeInputChange(props) {\n  const { e, setSecurityCode, passwordInputRef } = props;\n  const slicedInputValue = e.target.value.slice(0, SECURITY_CODE_LENGTH);\n\n  if (slicedInputValue.length === SECURITY_CODE_LENGTH) {\n    passwordInputRef.current.focus();\n  }\n  setSecurityCode(slicedInputValue);\n}\n","import { useRef, forwardRef, useContext } from 'react';\nimport { CardInfoContext } from '../../../../contexts';\nimport { Input, Label } from '../../../../components';\nimport { FIRST, SECOND, PASSWORD_UNIT_LENGTH } from '../../../../constants';\n\nexport const PasswordInput = forwardRef((_, firstRef) => {\n  const { password, setPassword } = useContext(CardInfoContext);\n  const secondRef = useRef();\n\n  return (\n    <>\n      <Label>카드 비밀번호</Label>\n      <div className=\"CardPasswordInput\">\n        {[...Array(2)].map((_, index) => (\n          <Input\n            key={`filled-${index}`}\n            container=\"CardInfoForm__Input__Filler--filled CardPasswordInput__Filler\"\n            className=\"CardPasswordInput__Field\"\n            type=\"password\"\n            name={index === 0 ? FIRST : SECOND}\n            value={password[index === 0 ? FIRST : SECOND]}\n            onChange={(e) => handlePasswordInputChange({ e, password, setPassword, secondRef })}\n            ref={index === 0 ? firstRef : secondRef}\n          />\n        ))}\n        {[...Array(2)].map((_, index) => (\n          <Input\n            key={`transparent-${index}`}\n            container=\"CardInfoForm__Input__Filler--transparent CardPasswordInput__Filler\"\n            className=\"CardPasswordInput__Field\"\n            type=\"password\"\n            value=\"1\"\n            disabled\n          />\n        ))}\n      </div>\n    </>\n  );\n});\n\nfunction handlePasswordInputChange(props) {\n  const { e, password, setPassword, secondRef } = props;\n  const inputName = e.target.name;\n  const slicedInputValue = e.target.value.slice(0, PASSWORD_UNIT_LENGTH);\n\n  if (inputName === FIRST && slicedInputValue.length === PASSWORD_UNIT_LENGTH) {\n    secondRef?.current.focus();\n  }\n  setPassword({ ...password, [inputName]: slicedInputValue });\n}\n\nPasswordInput.displayName = 'PasswordInput';\n","import { getFormattedCardInfo } from '../../../../cardInfoFormatter';\nimport {\n  FORMATTED_CARD_NUMBER_LENGTH,\n  FORMATTED_EXPIRATION_DATE_LENGTH,\n  SECURITY_CODE_LENGTH,\n  FORMATTED_PASSWORD_LENGTH,\n} from '../../../../constants';\n\nexport const isFormFulFilled = ({ cardInfo, initialCardInfo }) => {\n  const { securityCode, password } = cardInfo;\n  const { formattedNumber, formattedExpirationDate, formattedOwnerName } = getFormattedCardInfo({ cardInfo });\n\n  return (\n    isNumberFulfilled(formattedNumber) &&\n    isExpirationDateFulfilled(formattedExpirationDate) &&\n    isOwnerNameFulfilled(formattedOwnerName, initialCardInfo.ownerName) &&\n    isSecurityCodeFulfilled(securityCode) &&\n    isPasswordFulfilled(password)\n  );\n};\n\nexport const isNumberFulfilled = (formattedNumber) => {\n  return formattedNumber.length === FORMATTED_CARD_NUMBER_LENGTH;\n};\n\nexport const isExpirationDateFulfilled = (formattedExpirationDate) => {\n  return formattedExpirationDate.length === FORMATTED_EXPIRATION_DATE_LENGTH;\n};\n\nexport const isOwnerNameFulfilled = (formattedOwnerName, initialOwnerName) => {\n  return formattedOwnerName && formattedOwnerName !== initialOwnerName;\n};\n\nexport const isSecurityCodeFulfilled = (securityCode) => {\n  return securityCode.length === SECURITY_CODE_LENGTH;\n};\n\nexport const isPasswordFulfilled = (password) => {\n  return Object.values(password).join('').length === FORMATTED_PASSWORD_LENGTH;\n};\n\nexport const isCardNameFulfilled = (company, initialCompany) => {\n  return company.name !== initialCompany.name && company.color !== initialCompany.color;\n};\n","import { useContext, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CardInfoContext } from '../../../../contexts';\nimport { Button, Form } from '../../../../components';\nimport { CardNumberInput } from './CardNumberInput.js';\nimport { ExpirationDateInput } from './ExpirationDateInput.js';\nimport { OwnerNameInput } from './OwnerNameInput.js';\nimport { SecurityCodeInput } from './SecurityCodeInput.js';\nimport { PasswordInput } from './PasswordInput.js';\nimport { isFormFulFilled, isCardNameFulfilled } from './validator.js';\nimport { ROUTE } from '../../../../constants';\n\nexport const CardInfoForm = (props) => {\n  const { cardInfo, initialCardInfo } = useContext(CardInfoContext);\n  const { setIsModalOpen } = props;\n\n  const expirationDateInputRef = useRef();\n  const ownerNameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n\n  return (\n    <Form className=\"CardInfoForm\">\n      <CardNumberInput setIsModalOpen={setIsModalOpen} refToBeFocusedNext={expirationDateInputRef} />\n      <ExpirationDateInput ref={expirationDateInputRef} refToBeFocusedNext={ownerNameInputRef} />\n      <OwnerNameInput ref={ownerNameInputRef} />\n      <SecurityCodeInput refToBeFocusedNext={passwordInputRef} />\n      <PasswordInput ref={passwordInputRef} />\n      <Button\n        className=\"CardInfoForm__Submit_Button\"\n        disabled={!isFormFulFilled({ cardInfo, initialCardInfo })}\n        onClick={(e) => handleCardInfoSubmit({ e, cardInfo, setIsModalOpen, initialCardInfo, history })}\n      >\n        다음\n      </Button>\n    </Form>\n  );\n};\n\nfunction handleCardInfoSubmit({ e, initialCardInfo, cardInfo, setIsModalOpen, history }) {\n  e.preventDefault();\n\n  if (!isCardNameFulfilled(cardInfo.company, initialCardInfo.company)) {\n    setIsModalOpen(true);\n    return;\n  }\n  history.push(ROUTE.ADD_COMPLETE);\n}\n","/* eslint-disable react/no-array-index-key */\nimport { useContext } from 'react';\nimport { CardInfoContext } from '../../../../contexts';\nimport { Button, Label, Modal } from '../../../../components';\nimport { CARD_COMPANY_LIST } from '../../../../constants';\n\nexport const CardCompanySelectModal = (props) => {\n  const { isOpen, setIsModalOpen } = props;\n  const { setCompany } = useContext(CardInfoContext);\n\n  return (\n    <Modal\n      className=\"CardCompanySelectModal--bottom\"\n      isOpen={isOpen}\n      onClick={(e) => handleDimmedAreaClick({ e, setIsModalOpen })}\n    >\n      <CardCompanyList setCompany={setCompany} setIsModalOpen={setIsModalOpen} />\n    </Modal>\n  );\n};\n\nexport function CardCompanyList({ setCompany, setIsModalOpen }) {\n  return (\n    <ul className=\"CardCompanyList\">\n      {CARD_COMPANY_LIST.map((company, index) => (\n        <CardCompanyItem key={index} company={company} setCompany={setCompany} setIsModalOpen={setIsModalOpen} />\n      ))}\n    </ul>\n  );\n}\n\nfunction CardCompanyItem({ company, setCompany, setIsModalOpen }) {\n  return (\n    <li className=\"CardCompanyList__Item\">\n      <Button\n        className=\"CardCompanyList__Item__Button\"\n        name={company.name}\n        style={{ backgroundColor: company.color }}\n        onClick={(e) => handleCardCompanySelect({ e, setCompany, setIsModalOpen })}\n      />\n      <Label>{company.name}</Label>\n    </li>\n  );\n}\n\nfunction handleCardCompanySelect({ e, setCompany, setIsModalOpen }) {\n  const name = e.target.name;\n  const color = e.target.style.backgroundColor;\n\n  setCompany({ name, color });\n  setIsModalOpen(false);\n}\n\nfunction handleDimmedAreaClick({ e, setIsModalOpen }) {\n  const Modal = e.currentTarget;\n  const ModalViewPort = Modal.firstChild;\n\n  if (e.target === Modal || e.target === ModalViewPort) {\n    setIsModalOpen(false);\n  }\n}\n","import { useContext, useState } from 'react';\nimport { CardInfoContext } from '../../../contexts/CardInfoContext';\nimport { Button, CreditCardPreview, Heading } from '../../../components';\nimport { CardInfoForm } from './CardInfoForm';\nimport { CardCompanySelectModal } from './CardCompanySelectModal';\nimport { getFormattedCardInfo } from '../../../cardInfoFormatter';\nimport { BackwardIcon } from '../../../components/BackwardIcon';\nimport './style.css';\n\nexport const AddFormPage = () => {\n  const { cardInfo, company } = useContext(CardInfoContext);\n  const { formattedNumber, formattedExpirationDate, formattedOwnerName } = getFormattedCardInfo({ cardInfo });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className=\"AddFormPage\">\n      <div className=\"AddFormPage__Heading\">\n        <Button className=\"AddFormPage__BackwardButton\">\n          <BackwardIcon />\n        </Button>\n        <Heading>카드 추가</Heading>\n      </div>\n      <CreditCardPreview\n        companyColor={company.color}\n        companyName={company.name}\n        cardNumber={formattedNumber}\n        ownerName={formattedOwnerName}\n        expirationDate={formattedExpirationDate}\n      />\n      <CardInfoForm setIsModalOpen={setIsModalOpen} />\n      <CardCompanySelectModal isOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n    </div>\n  );\n};\n","import { Switch, Route } from 'react-router-dom';\nimport { AddCompletePage } from './AddCompletePage';\nimport { AddFormPage } from './AddFormPage';\nimport { ROUTE } from '../../constants';\nimport { CardInfoContextProvider } from '../../contexts';\n\nexport const AddPages = () => {\n  return (\n    <CardInfoContextProvider>\n      <Switch>\n        <Route exact path={ROUTE.ADD}>\n          <AddFormPage />\n        </Route>\n        <Route path={ROUTE.ADD_COMPLETE}>\n          <AddCompletePage />\n        </Route>\n      </Switch>\n    </CardInfoContextProvider>\n  );\n};\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ListPage } from './pages/ListPage';\nimport { AddPages } from './pages/AddPages';\nimport { ROUTE } from './constants';\nimport { CardListContextProvider } from './contexts';\n\nexport default function App() {\n  return (\n    <CardListContextProvider>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path={[ROUTE.HOME, ROUTE.LIST]}>\n              <ListPage />\n            </Route>\n            <Route path={ROUTE.ADD}>\n              <AddPages />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </CardListContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}