{"version":3,"sources":["components/Button/index.js","components/Card/index.js","components/Circle/index.js","components/CreditCard/index.js","components/Container/index.js","components/Form/index.js","components/Input/index.js","components/Label/index.js","components/Modal/index.js","components/Text/index.js","components/Title/index.js","constants/page.js","constants/card.js","pages/CardListPage/index.js","pages/AddCardPages/AddCompletePage/CardNicknameForm/index.js","pages/AddCardPages/AddCompletePage/CardNicknameForm/handler.js","cardInfoFormatter.js","pages/AddCardPages/AddCompletePage/index.js","pages/AddCardPages/AddFormPage/CardInfoForm/CardNumberInput/handler.js","pages/AddCardPages/AddFormPage/CardInfoForm/CardNumberInput/index.js","pages/AddCardPages/AddFormPage/CardInfoForm/ExpirationDateInput/handler.js","pages/AddCardPages/AddFormPage/CardInfoForm/ExpirationDateInput/index.js","pages/AddCardPages/AddFormPage/CardInfoForm/OwnerNameInput/handler.js","pages/AddCardPages/AddFormPage/CardInfoForm/OwnerNameInput/index.js","pages/AddCardPages/AddFormPage/CardInfoForm/SecurityCodeInput/handler.js","images/cvc.png","pages/AddCardPages/AddFormPage/CardInfoForm/SecurityCodeInput/index.js","pages/AddCardPages/AddFormPage/CardInfoForm/PasswordInput/index.js","pages/AddCardPages/AddFormPage/CardInfoForm/PasswordInput/handler.js","pages/AddCardPages/AddFormPage/CardInfoForm/validator.js","pages/AddCardPages/AddFormPage/CardInfoForm/index.js","pages/AddCardPages/AddFormPage/CardInfoForm/handler.js","pages/AddCardPages/AddFormPage/CardCompanySelectModal/index.js","pages/AddCardPages/AddFormPage/CardCompanySelectModal/handler.js","pages/AddCardPages/AddFormPage/index.js","pages/AddCardPages/index.js","App.js","index.js"],"names":["Button","type","theme","backgroundColor","children","props","className","join","style","defaultProps","onClick","cx","classNames","bind","styles","Card","size","boxShadow","cardClass","CreditCard","company","cardNumber","ownerName","expirationDate","Container","containerClass","classnames","Form","formClass","Input","forwardRef","ref","container","inputClass","displayName","id","placeholder","disabled","Label","htmlFor","Modal","isOpen","modalClass","modalContentClass","Text","color","fontSize","textAlign","fontWeight","width","letterSpacing","textClass","Title","PAGE","FIRST","SECOND","CARD_NUMBER_MASKS","EXPIRATION_DATE_LENGTH","month","year","CARD_COMPANY_LIST","name","patterns","CardListPage","setRoute","CardNicknameForm","cardInfo","setCardInfo","initialNickname","addCardInfoToList","setNickname","nickname","prevState","createRef","useEffect","current","focus","value","onChange","e","target","slice","handleNicknameInputChange","preventDefault","handleNicknameSubmit","getFormattedCardInfo","number","isOwnerNameFilled","formattedNumber","getFormattedNumber","formattedExpirationDate","getFormattedExpirationDate","formattedOwnerName","getFormattedOwnerName","Object","values","some","fourDigit","length","first","second","AddCompletePage","initialCardInfo","CreditCardPreview","companyColor","companyName","handleBlockInvalidChar","includes","key","handleCardNumberInputChange","setNumber","setCompany","nextRef","setIsModalOpen","inputName","slicedInputValue","firstSixDigits","find","setCardCompanyAfterValidation","CardNumberInput","expirationDateInputRef","firstRef","secondRef","thirdRef","fourthRef","third","fourth","onKeyDown","Dash","handleExpirationDateInputChange","setExpirationDate","ExpirationDateInput","monthRef","ownerNameInputRef","yearRef","Slash","regExpOnlyAlphabet","OwnerNameInput","initialOwnerName","setOwnerName","setIsOwnerNameFilled","maxLength","replace","toUpperCase","handleOwnerNameInputChange","onBlur","SecurityCodeInput","securityCode","setSecurityCode","passwordInputRef","handleSecurityCodeInputChange","src","cvcImage","alt","PasswordInput","password","setPassword","Array","map","_","index","handlePasswordInputChange","isFormFulFilled","isNumberFulfilled","isExpirationDateFulfilled","isOwnerNameFulfilled","isSecurityCodeFulfilled","isPasswordFulfilled","CardInfoForm","initialCompany","handleCardInfoSubmit","CardCompanySelectModal","currentTarget","ModalViewPort","firstChild","handleDimmedAreaClick","CardCompanyList","CardCompanyItem","handleCardCompanySelect","AddFormPage","useState","isModalOpen","BackwardButton","viewBox","height","fill","d","stroke","strokeWidth","AddCardPage","route","App","cardList","setCardList","prevList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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EAGI,EAHJA,cACA9C,EAEI,EAFJA,SACGC,EACC,4GACE8C,EAAYxC,EAAG,OAAQL,GAE7B,OACE,8CAAMA,UAAW6C,EAAW3C,MAAO,CAAEqC,QAAOC,WAAUC,YAAWC,aAAYC,QAAOC,kBAAqB7C,GAAzG,aACGD,MAgBPwC,EAAKnC,aAAe,CAClBH,UAAW,GACXuC,MAAO,UACPC,SAAU,OACVE,WAAY,MACZD,UAAW,SACXE,MAAO,OACPC,cAAe,M,UCzCJE,EAAQ,SAAC,GAA6C,IAA3CP,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAU1C,EAAyB,EAAzBA,SAAaC,EAAY,+CAChE,OACE,4CAAIC,UAAU,QAAQE,MAAO,CAAEqC,QAAOC,aAAgBzC,GAAtD,aACGD,MAWPgD,EAAM3C,aAAe,CACnBoC,MAAO,UACPC,SAAU,QCpBL,IAAMO,EACA,WADAA,EAEI,cAFJA,EAGQ,kBCHRC,EAAQ,QACRC,EAAS,SASTC,EAAoB,mBAKpBC,EAAyB,CAAEC,MAAO,EAAGC,KAAM,GAY3CC,EAAoB,CAC/B,CACEC,KAAM,6BACNhB,MAAO,oBACPiB,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,6BACNhB,MAAO,qBACPiB,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACNhB,MAAO,oBACPiB,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACNhB,MAAO,mBACPiB,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACNhB,MAAO,qBACPiB,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACNhB,MAAO,qBACPiB,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,2BACNhB,MAAO,oBACPiB,SAAU,CACR,SACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,CACED,KAAM,iBACNhB,MAAO,oBACPivbOC,G,MAAe,SAAC1D,GAAW,IAC9B2D,EAAa3D,EAAb2D,SAGR,OACE,sBAAK1D,UAAU,eAAf,UACE,cAAC,EAAD,uCACA,wBAAQA,UAAU,kBAAkBI,QALX,kBAAMsD,EAASX,IAKxC,S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","file":"static/js/main.284ba06b.chunk.js","sourcesContent":["/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport const Button = ({ type, theme, backgroundColor, children, ...props }) => {\n  return (\n    <button type={type} className={['Button', `Button--${theme}`].join(' ')} style={{ backgroundColor }} {...props}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['submit', 'reset', 'button']),\n  theme: PropTypes.oneOf(['submit', 'question-mark', 'card-company', 'backward']),\n  backgroundColor: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: 'submit',\n  theme: 'submit',\n  backgroundColor: 'transparent',\n  children: '',\n  onClick: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Card = ({ size, backgroundColor, boxShadow, children, ...props }) => {\n  const cardClass = cx('Card', { [`Card--${size}`]: size }, { 'Card--shadow': boxShadow });\n\n  return (\n    <div className={cardClass} style={{ backgroundColor }} {...props}>\n      {children}\n    </div>\n  );\n};\n\nCard.propTypes = {\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'chip']),\n  backgroundColor: PropTypes.string,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nCard.defaultProps = {\n  size: 'small',\n  backgroundColor: '#E5E5E5',\n  boxShadow: false,\n  children: '',\n};\n","import PropTypes from 'prop-types';\n\nexport const Circle = ({ color, diameter }) => {\n  const radius = diameter / 2;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={diameter}\n      height={diameter}\n      viewBox={`0 0 ${diameter} ${diameter}`}\n      fill=\"none\"\n    >\n      <circle cx={radius} cy={radius} r={radius} fill={color} />\n    </svg>\n  );\n};\n\nCircle.propTypes = {\n  color: PropTypes.string,\n  diameter: PropTypes.number,\n};\n\nCircle.defaultProps = {\n  color: '#04C09E',\n  diameter: 4,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from '..';\nimport './style.css';\n\nexport const CreditCard = (props) => {\n  const { company, cardNumber, ownerName, expirationDate } = props;\n  return (\n    <div className=\"CreditCard\">\n      <span className=\"CreditCard__CardCompany\"> {company}</span>\n      <Card backgroundColor=\"#cbba64\" size=\"chip\" />\n      <span className=\"CreditCard__CardNumber\"> {cardNumber}</span>\n      <div className=\"CreditCard__Line\">\n        <span className=\"CreditCard__OwnerName\"> {ownerName}</span>\n        <span className=\"CreditCard__ExpirationDate\"> {expirationDate}</span>\n      </div>\n    </div>\n  );\n};\n\nCreditCard.propTypes = {\n  company: PropTypes.string,\n  cardNumber: PropTypes.string,\n  ownerName: PropTypes.string,\n  expirationDate: PropTypes.string,\n};\n\nCreditCard.defaultProps = {\n  company: '',\n  cardNumber: '0000 0000 ···· ····',\n  ownerName: '',\n  expirationDate: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Container = ({ className, children, ...props }) => {\n  const containerClass = cx('Container', className);\n\n  return (\n    <div className={containerClass} {...props}>\n      {children}\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n\nContainer.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classnames.bind(styles);\n\nexport const Form = ({ className, children, ...props }) => {\n  const formClass = cx('Form', className);\n\n  return (\n    <form className={formClass} {...props}>\n      {children}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n\nForm.defaultProps = {\n  className: '',\n};\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { Container } from '..';\nimport styles from './style.css';\n\nconst cx = classnames.bind(styles);\n\nexport const Input = forwardRef(({ container, className, ...props }, ref) => {\n  const inputClass = cx('Input', className);\n\n  if (container) {\n    return (\n      <Container className={container}>\n        <input className={inputClass} {...props} ref={ref} />\n      </Container>\n    );\n  }\n  return <input className={inputClass} {...props} ref={ref} />;\n});\n\nInput.displayName = 'Input';\n\nInput.propTypes = {\n  container: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  type: PropTypes.oneOf([\n    'submit',\n    'text',\n    'number',\n    'password',\n    'checkbox',\n    'radio',\n    'color',\n    'search',\n    'month',\n    'week',\n    'date',\n    'time',\n    'datetime-local',\n    'range',\n    'url',\n    'tel',\n    'email',\n    'file',\n  ]),\n};\n\nInput.defaultProps = {\n  container: null,\n  className: null,\n  id: null,\n  placeholder: '',\n  disabled: false,\n  type: 'text',\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport const Label = ({ children, ...props }) => {\n  return (\n    <label className=\"Label\" {...props}>\n      {children}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nLabel.defaultProps = {\n  htmlFor: null,\n  children: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classnames.bind(styles);\n\nexport const Modal = ({ isOpen, className, children, ...props }) => {\n  const modalClass = cx('Modal', { 'Modal--open': isOpen });\n  const modalContentClass = cx('Modal__Content', className);\n\n  return (\n    <div className={modalClass} {...props}>\n      <div className=\"Modal__ViewPort\">\n        <div className={modalContentClass}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './style.css';\n\nconst cx = classNames.bind(styles);\n\nexport const Text = ({\n  className,\n  color,\n  fontSize,\n  textAlign,\n  fontWeight,\n  width,\n  letterSpacing,\n  children,\n  ...props\n}) => {\n  const textClass = cx('Text', className);\n\n  return (\n    <span className={textClass} style={{ color, fontSize, textAlign, fontWeight, width, letterSpacing }} {...props}>\n      {children}\n    </span>\n  );\n};\n\nText.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  fontSize: PropTypes.string,\n  textAlign: PropTypes.oneOf(['start', 'center', 'end']),\n  fontWeight: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  letterSpacing: PropTypes.string,\n};\n\nText.defaultProps = {\n  className: '',\n  color: '#575757',\n  fontSize: '1rem',\n  fontWeight: '400',\n  textAlign: 'center',\n  width: '100%',\n  letterSpacing: '0%',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport const Title = ({ color, fontSize, children, ...props }) => {\n  return (\n    <h2 className=\"Title\" style={{ color, fontSize }} {...props}>\n      {children}\n    </h2>\n  );\n};\n\nTitle.propTypes = {\n  color: PropTypes.string,\n  fontSize: PropTypes.string,\n  children: PropTypes.string.isRequired,\n};\n\nTitle.defaultProps = {\n  color: '#383838',\n  fontSize: '1rem',\n};\n","export const PAGE = {\n  CARD_LIST: 'cardList',\n  ADD_CARD_FORM: 'addCardForm',\n  ADD_CARD_COMPLETE: 'addCardComplete',\n};\n","export const FIRST = 'first';\nexport const SECOND = 'second';\n\nexport const MONTH = 'month';\nexport const YEAR = 'year';\nexport const SLASH = '/';\n\nexport const INITIAL_FORMATTED_CARD_NUMBER = '';\nexport const FORMATTED_CARD_NUMBER_LENGTH = 19;\nexport const CARD_NUMBER_UNIT_LENGTH = 4;\nexport const CARD_NUMBER_MASKS = '····';\n\nexport const INITIAL_FORMATTED_EXPIRATION_MONTH = 'MM';\nexport const INITIAL_FORMATTED_EXPIRATION_YEAR = 'YY';\nexport const FORMATTED_EXPIRATION_DATE_LENGTH = 5;\nexport const EXPIRATION_DATE_LENGTH = { month: 2, year: 2 };\n\nexport const INITIAL_FORMATTED_OWNER_NAME = 'NAME';\nexport const MAX_OWNER_NAME_LENGTH = 30;\n\nexport const SECURITY_CODE_LENGTH = 3;\n\nexport const PASSWORD_UNIT_LENGTH = 1;\nexport const FORMATTED_PASSWORD_LENGTH = 2;\n\nexport const MAX_NICKNAME_LENGTH = 10;\n\nexport const CARD_COMPANY_LIST = [\n  {\n    name: 'KB국민카드',\n    color: 'rgb(84, 124, 228)',\n    patterns: [\n      '356415',\n      '356912',\n      '376364',\n      '376365',\n      '425863',\n      '433290',\n      '455306',\n      '457973',\n      '467309',\n      '502123',\n      '516453',\n      '520504',\n      '522971',\n      '523612',\n      '527289',\n      '536326',\n      '536510',\n      '537706',\n      '540926',\n      '540947',\n      '554959',\n      '557042',\n      '589808',\n      '623374',\n      '625006',\n      '625804',\n      '943646',\n      '944541',\n      '944542',\n      '949098',\n      '949094',\n      '949099',\n      '949103',\n    ],\n  },\n  {\n    name: 'NH농협카드',\n    color: 'rgb(148, 218, 205)',\n    patterns: [\n      '356516',\n      '407916',\n      '407917',\n      '409216',\n      '409217',\n      '470616',\n      '470617',\n      '485479',\n      '485480',\n      '490611',\n      '490612',\n      '538811',\n      '538812',\n      '542416',\n      '542454',\n      '542586',\n      '546111',\n      '546112',\n      '552111',\n      '552112',\n      '559434',\n      '559438',\n      '621011',\n      '621012',\n      '624363',\n      '625111',\n      '625112',\n      '636093',\n      '657311',\n      '657312',\n      '941116',\n      '941117',\n      '942011',\n      '942012',\n      '943016',\n      '943017',\n      '943116',\n      '943117',\n      '944011',\n      '944012',\n      '944111',\n      '944112',\n      '944116',\n      '944117',\n      '944711',\n      '944712',\n      '946316',\n    ],\n  },\n  {\n    name: '삼성카드',\n    color: 'rgb(222, 89, 185)',\n    patterns: [\n      '377989',\n      '379183',\n      '400913',\n      '451245',\n      '458532',\n      '463732',\n      '4689',\n      '4705',\n      '474289',\n      '512365',\n      '518831',\n      '536125',\n      '536148',\n      '536648',\n      '536181',\n      '552014',\n      '624411',\n      '625817',\n      '941029',\n      '941088',\n      '942101',\n    ],\n  },\n  {\n    name: '신한카드',\n    color: 'rgb(226, 65, 65)',\n    patterns: [\n      '356297',\n      '356907',\n      '356878',\n      '377178',\n      '377983',\n      '377988',\n      '400772',\n      '403965',\n      '404678',\n      '422155',\n      '429612',\n      '430972',\n      '434976',\n      '436420',\n      '438676',\n      '449914',\n      '445090',\n      '451842',\n      '451845',\n      '454478',\n      '460561',\n      '461954',\n      '465887',\n      '472175',\n      '472246',\n      '478292',\n      '486678',\n      '510737',\n      '511187',\n      '515594',\n      '517134',\n      '521189',\n      '528638',\n      '535180',\n      '537943',\n      '538413',\n      '542879',\n      '549840',\n      '559410',\n      '589807',\n      '605609',\n      '606045',\n      '621078',\n      '624331',\n      '624348',\n      '625178',\n      '941061',\n      '941080',\n      '941082',\n      '941083',\n      '941161',\n      '942062',\n      '942073',\n      '942078',\n      '944078',\n    ],\n  },\n  {\n    name: '하나카드',\n    color: 'rgb(231, 110, 154)',\n    patterns: [\n      '356543',\n      '356545',\n      '357104',\n      '371001',\n      '377969',\n      '379192',\n      '402367',\n      '408966',\n      '411904',\n      '414025',\n      '416206',\n      '416207',\n      '416262',\n      '420189',\n      '420707',\n      '4289',\n      '4336',\n      '448125',\n      '450596',\n      '455437',\n      '459900',\n      '459930',\n      '461771',\n      '465306',\n      '465583',\n      '490625',\n      '493455',\n      '502928',\n      '511845',\n      '518185',\n      '523830',\n      '524242',\n      '524335',\n      '531838',\n      '532092',\n      '538661',\n      '541707',\n      '546252',\n      '552125',\n      '552323',\n      '553177',\n      '621025',\n      '621079',\n      '624435',\n      '624436',\n      '626261',\n      '941051',\n      '941052',\n      '941053',\n      '941181',\n      '941581',\n      '942025',\n      '944025',\n      '944081',\n    ],\n  },\n  {\n    name: '우리카드',\n    color: 'rgb(115, 188, 109)',\n    patterns: [\n      '404720',\n      '408320',\n      '412020',\n      '406107',\n      '421420',\n      '4326',\n      '447820',\n      '490220',\n      '514043',\n      '515954',\n      '536320',\n      '537102',\n      '538720',\n      '538920',\n      '548020',\n      '552220',\n      '553820',\n      '5589',\n      '605615',\n      '636094',\n      '621020',\n      '623393',\n      '625320',\n      '621020',\n      '655620',\n      '657020',\n      '942520',\n      '943520',\n      '944420',\n      '944520',\n      '947124',\n    ],\n  },\n  {\n    name: '현대카드',\n    color: 'rgb(243, 125, 59)',\n    patterns: [\n      '361653',\n      '402857',\n      '403302',\n      '404947',\n      '413526',\n      '4172',\n      '418143',\n      '433028',\n      '435661',\n      '438265',\n      '489016',\n      '512114',\n      '523930',\n      '532793',\n      '543333',\n      '550347',\n      '552290',\n      '552376',\n      '624368',\n      '943133',\n      '943135',\n      '949019',\n      '949013',\n      '949015',\n      '949018',\n      '949085',\n      '949097',\n    ],\n  },\n  {\n    name: 'BC카드',\n    color: 'rgb(251, 205, 88)',\n    patterns: [\n      '356003',\n      '404803',\n      '405203',\n      '419803',\n      '427203',\n      '447703',\n      '490603',\n      '496603',\n      '538803',\n      '538903',\n      '531194',\n      '552103',\n      '558903',\n      '621003',\n      '624303',\n      '625103',\n      '655603',\n      '942003',\n      '944003',\n      '944603',\n      '970003',\n      '416339',\n      '552139',\n      '655639',\n      '657339',\n      '970039',\n      '517548',\n      '538832',\n      '552132',\n      '621032',\n      '625132',\n      '657332',\n      '655632',\n      '944032',\n      '551431',\n      '621031',\n      '657331',\n      '944031',\n      '946031',\n      '970031',\n      '411171',\n      '538159',\n      '626275',\n      '624414',\n      '935071',\n      '944071',\n      '409085',\n      '448123',\n      '521176',\n      '523527',\n      '536323',\n      '552123',\n      '559123',\n      '604823',\n      '621023',\n      '655623',\n      '935023',\n      '459951',\n      '463916',\n      '657316',\n      '9035',\n      '459912',\n      '465613',\n      '453261',\n      '485462',\n      '941696',\n      '944096',\n      '944696',\n      '941648',\n      '944648',\n      '944948',\n      '944949',\n      '949048',\n      '949049',\n      '536886',\n      '621640',\n      '625243',\n      '427352',\n      '944045',\n      '970045',\n      '941691',\n      '944691',\n      '944063',\n      '944009',\n      '944079',\n      '944061',\n      '944080',\n      '941643',\n      '944030',\n      '944095',\n      '455320',\n      '625120',\n      '943020',\n      '546465',\n      '941642',\n      '944192',\n      '930144',\n      '946044',\n      '946144',\n      '946544',\n      '946644',\n      '621249',\n    ],\n  },\n];\n","import { Card, Text, Title } from '../../components';\nimport { PAGE } from '../../constants';\nimport './style.css';\n\nexport const CardListPage = (props) => {\n  const { setRoute } = props;\n  const handleAddButtonClick = () => setRoute(PAGE.ADD_CARD_FORM);\n\n  return (\n    <div className=\"CardListPage\">\n      <Title>보유카드</Title>\n      <button className=\"Card__AddButton\" onClick={handleAddButtonClick}>\n        <Card>\n          <Text fontSize=\"1.875rem\">+</Text>\n        </Card>\n      </button>\n    </div>\n  );\n};\n","import { createRef, useEffect } from 'react';\nimport { Button, Form, Input } from '../../../../components';\nimport { handleNicknameInputChange, handleNicknameSubmit } from './handler';\nimport './style.css';\n\nexport const CardNicknameForm = (props) => {\n  const { setRoute, cardInfo, setCardInfo, initialNickname, addCardInfoToList } = props;\n  const setNickname = (nickname) => setCardInfo((prevState) => ({ ...prevState, nickname }));\n  const { nickname } = cardInfo;\n  const ref = createRef();\n\n  useEffect(() => {\n    ref.current?.focus();\n  }, []);\n\n  return (\n    <Form className=\"CardNicknameForm\">\n      <Input\n        className=\"CardNicknameInput__Field\"\n        placeholder=\"카드 별칭\"\n        container=\"CardNicknameInput__Filler--transparent\"\n        value={nickname}\n        ref={ref}\n        onChange={(e) => handleNicknameInputChange({ e, setNickname })}\n      />\n      <Button\n        disabled={nickname === initialNickname}\n        onClick={(e) => handleNicknameSubmit({ e, setRoute, cardInfo, addCardInfoToList })}\n      >\n        확인\n      </Button>\n    </Form>\n  );\n};\n","import { PAGE, MAX_NICKNAME_LENGTH } from '../../../../constants';\n\nexport const handleNicknameInputChange = ({ e, setNickname }) => {\n  const slicedInputValue = e.target.value.slice(0, MAX_NICKNAME_LENGTH);\n  setNickname(slicedInputValue);\n};\n\nexport const handleNicknameSubmit = ({ e, setRoute, cardInfo, addCardInfoToList }) => {\n  e.preventDefault();\n  addCardInfoToList(cardInfo);\n  setRoute(PAGE.CARD_LIST);\n};\n","import {\n  INITIAL_FORMATTED_CARD_NUMBER,\n  CARD_NUMBER_UNIT_LENGTH,\n  CARD_NUMBER_MASKS,\n  INITIAL_FORMATTED_EXPIRATION_MONTH,\n  INITIAL_FORMATTED_EXPIRATION_YEAR,\n  FORMATTED_EXPIRATION_DATE_LENGTH,\n  SLASH,\n  INITIAL_FORMATTED_OWNER_NAME,\n} from './constants';\n\nexport const getFormattedCardInfo = ({ cardInfo }) => {\n  const { number, expirationDate, ownerName, isOwnerNameFilled } = cardInfo;\n\n  return {\n    formattedNumber: getFormattedNumber({ number }),\n    formattedExpirationDate: getFormattedExpirationDate({ expirationDate }),\n    formattedOwnerName: getFormattedOwnerName({ ownerName, isOwnerNameFilled }),\n  };\n};\n\nconst getFormattedNumber = ({ number }) => {\n  if (Object.values(number).some((fourDigit) => fourDigit.length !== CARD_NUMBER_UNIT_LENGTH)) {\n    return INITIAL_FORMATTED_CARD_NUMBER;\n  }\n  return [number.first, number.second, CARD_NUMBER_MASKS, CARD_NUMBER_MASKS].join(' ');\n};\n\nconst getFormattedExpirationDate = ({ expirationDate }) => {\n  const formattedExpirationDate = Object.values(expirationDate).join(SLASH);\n\n  if (\n    formattedExpirationDate.length < FORMATTED_EXPIRATION_DATE_LENGTH ||\n    expirationDate.month === '' ||\n    expirationDate.year === ''\n  ) {\n    return `${INITIAL_FORMATTED_EXPIRATION_MONTH}${SLASH}${INITIAL_FORMATTED_EXPIRATION_YEAR}`;\n  }\n  return formattedExpirationDate;\n};\n\nconst getFormattedOwnerName = ({ ownerName, isOwnerNameFilled }) => {\n  if (!isOwnerNameFilled) {\n    return INITIAL_FORMATTED_OWNER_NAME;\n  }\n  return ownerName;\n};\n","import { Card, CreditCard, Text } from '../../../components';\nimport { CardNicknameForm } from './CardNicknameForm';\nimport { getFormattedCardInfo } from '../../../cardInfoFormatter';\nimport './style.css';\n\nexport const AddCompletePage = (props) => {\n  const { setRoute, initialCardInfo, cardInfo, setCardInfo, addCardInfoToList } = props;\n  const { formattedNumber, formattedExpirationDate, formattedOwnerName } = getFormattedCardInfo({ cardInfo });\n  const { company } = cardInfo;\n\n  return (\n    <div>\n      <Text className=\"AddCompletePage__Text\" fontSize=\"1.5rem\">\n        카드등록이 완료되었습니다.\n      </Text>\n      <CreditCardPreview\n        companyColor={company.color}\n        companyName={company.name}\n        formattedNumber={formattedNumber}\n        formattedExpirationDate={formattedExpirationDate}\n        formattedOwnerName={formattedOwnerName}\n      />\n      <CardNicknameForm\n        setRoute={setRoute}\n        cardInfo={cardInfo}\n        setCardInfo={setCardInfo}\n        initialNickname={initialCardInfo.nickname}\n        addCardInfoToList={addCardInfoToList}\n      />\n    </div>\n  );\n};\n\nfunction CreditCardPreview(props) {\n  const { companyColor, companyName, formattedNumber, formattedExpirationDate, formattedOwnerName } = props;\n\n  return (\n    <div className=\"CreditCardPreview CreditCardPreview--large\">\n      <Card backgroundColor={companyColor} boxShadow size=\"medium\">\n        <CreditCard\n          company={companyName}\n          cardNumber={formattedNumber}\n          expirationDate={formattedExpirationDate}\n          ownerName={formattedOwnerName}\n        />\n      </Card>\n    </div>\n  );\n}\n","import { CARD_NUMBER_UNIT_LENGTH, CARD_COMPANY_LIST, SECOND } from '../../../../../constants';\n\nexport const handleBlockInvalidChar = (e) => ['e', 'E', '+', '-'].includes(e.key) && e.preventDefault();\n\nexport const handleCardNumberInputChange = (props) => {\n  const { e, number, setNumber, setCompany, nextRef, setIsModalOpen } = props;\n  const inputName = e.target.name;\n  const slicedInputValue = e.target.value.slice(0, CARD_NUMBER_UNIT_LENGTH);\n\n  if (slicedInputValue.length === CARD_NUMBER_UNIT_LENGTH) {\n    nextRef[inputName]?.current.focus();\n  }\n  setNumber({ ...number, [inputName]: slicedInputValue });\n  setCardCompanyAfterValidation({\n    number,\n    setCompany,\n    slicedInputValue,\n    inputName,\n    setIsModalOpen,\n  });\n};\n\nfunction setCardCompanyAfterValidation(props) {\n  const { inputName, slicedInputValue, number, setCompany, setIsModalOpen } = props;\n\n  if (\n    inputName !== SECOND ||\n    slicedInputValue.length < CARD_NUMBER_UNIT_LENGTH ||\n    number.first < CARD_NUMBER_UNIT_LENGTH\n  ) {\n    return;\n  }\n\n  const firstSixDigits = number.first + slicedInputValue.slice(0, 2);\n  const company = CARD_COMPANY_LIST.find((company) => company.patterns.includes(firstSixDigits));\n\n  if (!company) {\n    setIsModalOpen(true);\n    return;\n  }\n  setCompany({ name: company.name, color: company.color });\n}\n","import { createRef, useEffect } from 'react';\nimport { Container, Input, Label, Text } from '../../../../../components';\nimport { handleBlockInvalidChar, handleCardNumberInputChange } from './handler';\nimport { CARD_NUMBER_UNIT_LENGTH } from '../../../../../constants';\n\nexport const CardNumberInput = (props) => {\n  const { number, setNumber, setCompany, setIsModalOpen, expirationDateInputRef } = props;\n  const firstRef = createRef();\n  const secondRef = createRef();\n  const thirdRef = createRef();\n  const fourthRef = createRef();\n  const nextRef = {\n    first: secondRef,\n    second: thirdRef,\n    third: fourthRef,\n    fourth: expirationDateInputRef,\n  };\n\n  useEffect(() => {\n    firstRef.current?.focus();\n  }, []);\n\n  return (\n    <>\n      <Label>카드 번호</Label>\n      <Container className=\"CardInfoForm__Input__Filler--filled CardNumberInput__Filler\">\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"number\"\n          ref={firstRef}\n          name=\"first\"\n          value={number.first}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n        <Dash length={number.first.length} />\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"number\"\n          ref={secondRef}\n          name=\"second\"\n          value={number.second}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n        <Dash length={number.second.length} />\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"password\"\n          ref={thirdRef}\n          name=\"third\"\n          value={number.third}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n        <Dash length={number.third.length} />\n        <Input\n          className=\"CardNumberInput__Field\"\n          type=\"password\"\n          ref={fourthRef}\n          name=\"fourth\"\n          value={number.fourth}\n          onChange={(e) => handleCardNumberInputChange({ e, nextRef, number, setNumber, setCompany, setIsModalOpen })}\n          onKeyDown={handleBlockInvalidChar}\n        />\n      </Container>\n    </>\n  );\n};\n\nfunction Dash({ length }) {\n  const className = length === CARD_NUMBER_UNIT_LENGTH ? 'Dash' : 'Dash Dash--hidden';\n  return (\n    <Text className={className} width=\"1rem\">\n      -\n    </Text>\n  );\n}\n","import { EXPIRATION_DATE_LENGTH } from '../../../../../constants';\n\nexport const handleExpirationDateInputChange = (props) => {\n  const { e, expirationDate, setExpirationDate, nextRef } = props;\n  const inputName = e.target.name;\n  const slicedInputValue = e.target.value.slice(0, EXPIRATION_DATE_LENGTH[inputName]);\n\n  if (slicedInputValue.length === EXPIRATION_DATE_LENGTH[inputName]) {\n    nextRef[inputName]?.current.focus();\n  }\n  setExpirationDate({ ...expirationDate, [inputName]: slicedInputValue });\n};\n","import { createRef, forwardRef } from 'react';\nimport { Container, Input, Label, Text } from '../../../../../components';\nimport { handleExpirationDateInputChange } from './handler';\nimport { MONTH, YEAR } from '../../../../../constants';\n\nexport const ExpirationDateInput = forwardRef((props, monthRef) => {\n  const { expirationDate, setExpirationDate, ownerNameInputRef } = props;\n  const yearRef = createRef();\n  const nextRef = {\n    month: yearRef,\n    year: ownerNameInputRef,\n  };\n\n  return (\n    <>\n      <Label>만료일</Label>\n      <Container className=\"CardInfoForm__Input__Filler--filled ExpirationDateInput__Filler\">\n        <Input\n          className=\"ExpirationDateInput__Field\"\n          placeholder=\"MM\"\n          type=\"number\"\n          name={MONTH}\n          ref={monthRef}\n          value={expirationDate.month}\n          onChange={(e) => handleExpirationDateInputChange({ e, expirationDate, setExpirationDate, nextRef })}\n        />\n        <Slash />\n        <Input\n          className=\"ExpirationDateInput__Field\"\n          placeholder=\"YY\"\n          type=\"number\"\n          name={YEAR}\n          ref={yearRef}\n          value={expirationDate.year}\n          onChange={(e) => handleExpirationDateInputChange({ e, expirationDate, setExpirationDate, nextRef })}\n        />\n      </Container>\n    </>\n  );\n});\n\nfunction Slash() {\n  return (\n    <Text color=\"#737373\" fontSize=\"0.75rem\" textAlign=\"center\" width=\"1rem\">\n      /\n    </Text>\n  );\n}\n\nExpirationDateInput.displayName = 'ExpirationDateInput';\n","const regExpOnlyAlphabet = /[^a-zA-Z ]+/g;\n\nexport const handleOwnerNameInputChange = (props) => {\n  const { e, setOwnerName } = props;\n  const inputValue = e.target.value;\n  const inputValueOnlyAlphabet = inputValue.replace(regExpOnlyAlphabet, '');\n\n  setOwnerName(inputValueOnlyAlphabet.toUpperCase());\n};\n\nexport const handleOwnerNameInputBlur = ({ setIsOwnerNameFilled }) => {\n  setIsOwnerNameFilled(true);\n};\n","import { forwardRef } from 'react';\nimport { Input, Label, Text } from '../../../../../components';\nimport { handleOwnerNameInputChange, handleOwnerNameInputBlur } from './handler';\nimport { MAX_OWNER_NAME_LENGTH } from '../../../../../constants';\n\nexport const OwnerNameInput = forwardRef((props, ref) => {\n  const { initialOwnerName, ownerName, setOwnerName, setIsOwnerNameFilled } = props;\n\n  return (\n    <>\n      <div className=\"OwnerNameInput__Header\">\n        <Label>카드 소유자 이름(선택)</Label>\n        <Text fontSize=\"0.75rem\" fontWeight=\"600\" letterSpacing=\"0.14em\" textAlign=\"end\" color=\"#525252\" width=\"2rem\">\n          {`${ownerName.length}/${MAX_OWNER_NAME_LENGTH}`}\n        </Text>\n      </div>\n      <Input\n        className=\"OwnerNameInput__Field\"\n        container=\"CardInfoForm__Input__Filler--filled OwnerNameInput__Filler\"\n        placeholder=\"카드에 표시된 이름과 동일하게 입력하세요.\"\n        name=\"ownerNameInput\"\n        maxLength={MAX_OWNER_NAME_LENGTH}\n        ref={ref}\n        value={ownerName === initialOwnerName ? '' : ownerName}\n        onChange={(e) => handleOwnerNameInputChange({ e, setOwnerName })}\n        onBlur={(e) => handleOwnerNameInputBlur({ e, setIsOwnerNameFilled })}\n      />\n    </>\n  );\n});\n\nOwnerNameInput.displayName = 'OwnerNameInput';\n","import { SECURITY_CODE_LENGTH } from '../../../../../constants';\n\nexport const handleSecurityCodeInputChange = (props) => {\n  const { e, setSecurityCode, passwordInputRef } = props;\n  const slicedInputValue = e.target.value.slice(0, SECURITY_CODE_LENGTH);\n\n  if (slicedInputValue.length === SECURITY_CODE_LENGTH) {\n    passwordInputRef.current.focus();\n  }\n  setSecurityCode(slicedInputValue);\n};\n","export default __webpack_public_path__ + \"static/media/cvc.c772b326.png\";","import { Button, Input, Label } from '../../../../../components';\nimport { handleSecurityCodeInputChange } from './handler';\nimport { SECURITY_CODE_LENGTH } from '../../../../../constants';\nimport cvcImage from '../../../../../images/cvc.png';\n\nexport const SecurityCodeInput = (props) => {\n  const { securityCode, setSecurityCode, passwordInputRef } = props;\n\n  return (\n    <>\n      <Label>보안 코드(CVC/CVV)</Label>\n      <div className=\"SecurityCodeInput__Wrapper\">\n        <Input\n          className=\"SecurityCodeInput__Field\"\n          container=\"CardInfoForm__Input__Filler--filled SecurityCodeInput__Filler\"\n          type=\"password\"\n          onChange={(e) => handleSecurityCodeInputChange({ e, setSecurityCode, passwordInputRef })}\n          maxLength={SECURITY_CODE_LENGTH}\n          value={securityCode}\n        />\n        <Button theme=\"question-mark\" type=\"button\">\n          ?\n        </Button>\n        <img className=\"SecurityCodeInput__GuideImage\" width=\"80\" src={cvcImage} alt=\"cvc\" />\n      </div>\n    </>\n  );\n};\n","import { createRef, forwardRef } from 'react';\nimport { Input, Label } from '../../../../../components';\nimport { handlePasswordInputChange } from './handler';\nimport { FIRST, SECOND } from '../../../../../constants';\n\nexport const PasswordInput = forwardRef((props, firstRef) => {\n  const { password, setPassword } = props;\n  const secondRef = createRef();\n\n  return (\n    <>\n      <Label>카드 비밀번호</Label>\n      <div className=\"CardPasswordInput\">\n        {[...Array(2)].map((_, index) => (\n          <Input\n            key={`filled-${index}`}\n            container=\"CardInfoForm__Input__Filler--filled CardPasswordInput__Filler\"\n            className=\"CardPasswordInput__Field\"\n            type=\"password\"\n            name={index === 0 ? FIRST : SECOND}\n            value={password[index === 0 ? FIRST : SECOND]}\n            onChange={(e) => handlePasswordInputChange({ e, password, setPassword, secondRef })}\n            ref={index === 0 ? firstRef : secondRef}\n          />\n        ))}\n        {[...Array(2)].map((_, index) => (\n          <Input\n            key={`transparent-${index}`}\n            container=\"CardInfoForm__Input__Filler--transparent CardPasswordInput__Filler\"\n            className=\"CardPasswordInput__Field\"\n            type=\"password\"\n            value=\"1\"\n            disabled\n          />\n        ))}\n      </div>\n    </>\n  );\n});\n\nPasswordInput.displayName = 'PasswordInput';\n","import { PASSWORD_UNIT_LENGTH, FIRST } from '../../../../../constants';\n\nexport const handlePasswordInputChange = (props) => {\n  const { e, password, setPassword, secondRef } = props;\n  const inputName = e.target.name;\n  const slicedInputValue = e.target.value.slice(0, PASSWORD_UNIT_LENGTH);\n\n  if (inputName === FIRST && slicedInputValue.length === PASSWORD_UNIT_LENGTH) {\n    secondRef?.current.focus();\n  }\n  setPassword({ ...password, [inputName]: slicedInputValue });\n};\n","import { getFormattedCardInfo } from '../../../../cardInfoFormatter';\nimport {\n  FORMATTED_CARD_NUMBER_LENGTH,\n  FORMATTED_EXPIRATION_DATE_LENGTH,\n  SECURITY_CODE_LENGTH,\n  FORMATTED_PASSWORD_LENGTH,\n} from '../../../../constants';\n\nexport const isCardNameFulfilled = (company, initialCompany) => {\n  return company.name !== initialCompany.name && company.color !== initialCompany.color;\n};\n\nexport const isFormFulFilled = ({ cardInfo, initialCardInfo }) => {\n  const { securityCode, password } = cardInfo;\n  const { formattedNumber, formattedExpirationDate, formattedOwnerName } = getFormattedCardInfo({ cardInfo });\n\n  return (\n    isNumberFulfilled(formattedNumber) &&\n    isExpirationDateFulfilled(formattedExpirationDate) &&\n    isOwnerNameFulfilled(formattedOwnerName, initialCardInfo.ownerName) &&\n    isSecurityCodeFulfilled(securityCode) &&\n    isPasswordFulfilled(password)\n  );\n};\n\nexport const isNumberFulfilled = (formattedNumber) => {\n  return formattedNumber.length === FORMATTED_CARD_NUMBER_LENGTH;\n};\n\nexport const isExpirationDateFulfilled = (formattedExpirationDate) => {\n  return formattedExpirationDate.length === FORMATTED_EXPIRATION_DATE_LENGTH;\n};\n\nexport const isOwnerNameFulfilled = (formattedOwnerName, initialOwnerName) => {\n  return formattedOwnerName && formattedOwnerName !== initialOwnerName;\n};\n\nexport const isSecurityCodeFulfilled = (securityCode) => {\n  return securityCode.length === SECURITY_CODE_LENGTH;\n};\n\nexport const isPasswordFulfilled = (password) => {\n  return Object.values(password).join('').length === FORMATTED_PASSWORD_LENGTH;\n};\n","import { createRef } from 'react';\nimport { Button, Form } from '../../../../components';\nimport { CardNumberInput } from './CardNumberInput';\nimport { ExpirationDateInput } from './ExpirationDateInput';\nimport { OwnerNameInput } from './OwnerNameInput';\nimport { SecurityCodeInput } from './SecurityCodeInput';\nimport { PasswordInput } from './PasswordInput';\nimport { handleCardInfoSubmit } from './handler';\nimport { isFormFulFilled } from './validator';\nimport './style.css';\n\nexport const CardInfoForm = (props) => {\n  const { initialCardInfo, cardInfo, setCardInfo, setIsModalOpen, setRoute } = props;\n  const { number, expirationDate, ownerName, securityCode, password } = cardInfo;\n  const setNumber = (number) => setCardInfo((prevState) => ({ ...prevState, number }));\n  const setCompany = (company) => setCardInfo((prevState) => ({ ...prevState, company }));\n  const setExpirationDate = (expirationDate) => setCardInfo((prevState) => ({ ...prevState, expirationDate }));\n  const setOwnerName = (ownerName) => setCardInfo((prevState) => ({ ...prevState, ownerName }));\n  const setIsOwnerNameFilled = (isOwnerNameFilled) => setCardInfo((prevState) => ({ ...prevState, isOwnerNameFilled }));\n  const setSecurityCode = (securityCode) => setCardInfo((prevState) => ({ ...prevState, securityCode }));\n  const setPassword = (password) => setCardInfo((prevState) => ({ ...prevState, password }));\n  const expirationDateInputRef = createRef();\n  const ownerNameInputRef = createRef();\n  const passwordInputRef = createRef();\n\n  return (\n    <Form className=\"CardInfoForm\">\n      <CardNumberInput\n        number={number}\n        setNumber={setNumber}\n        setCompany={setCompany}\n        setIsModalOpen={setIsModalOpen}\n        expirationDateInputRef={expirationDateInputRef}\n      />\n      <ExpirationDateInput\n        expirationDate={expirationDate}\n        setExpirationDate={setExpirationDate}\n        ref={expirationDateInputRef}\n        ownerNameInputRef={ownerNameInputRef}\n      />\n      <OwnerNameInput\n        initialOwnerName={initialCardInfo.ownerName}\n        ownerName={ownerName}\n        setOwnerName={setOwnerName}\n        setIsOwnerNameFilled={setIsOwnerNameFilled}\n        ref={ownerNameInputRef}\n      />\n      <SecurityCodeInput\n        securityCode={securityCode}\n        setSecurityCode={setSecurityCode}\n        passwordInputRef={passwordInputRef}\n      />\n      <PasswordInput password={password} setPassword={setPassword} ref={passwordInputRef} />\n      <Button\n        disabled={!isFormFulFilled({ cardInfo, initialCardInfo })}\n        onClick={(e) => handleCardInfoSubmit({ e, cardInfo, setIsModalOpen, initialCardInfo, setRoute })}\n      >\n        다음\n      </Button>\n    </Form>\n  );\n};\n","import { PAGE } from '../../../../constants';\nimport { isCardNameFulfilled } from './validator';\n\nexport const handleCardInfoSubmit = ({ e, initialCardInfo, cardInfo, setIsModalOpen, setRoute }) => {\n  e.preventDefault();\n\n  if (!isCardNameFulfilled(cardInfo.company, initialCardInfo.company)) {\n    setIsModalOpen(true);\n    return;\n  }\n  setRoute(PAGE.ADD_CARD_COMPLETE);\n};\n","/* eslint-disable react/no-array-index-key */\nimport { Button, Label, Modal } from '../../../../components';\nimport { handleCardCompanySelect, handleDimmedAreaClick } from './handler';\nimport { CARD_COMPANY_LIST } from '../../../../constants';\nimport './style.css';\n\nexport const CardCompanySelectModal = ({ isOpen, setCardInfo, setIsModalOpen }) => {\n  return (\n    <Modal\n      className=\"CardCompanySelectModal--bottom\"\n      isOpen={isOpen}\n      onClick={(e) => handleDimmedAreaClick({ e, setIsModalOpen })}\n    >\n      <CardCompanyList setCardInfo={setCardInfo} setIsModalOpen={setIsModalOpen} />\n    </Modal>\n  );\n};\n\nexport function CardCompanyList({ setCardInfo, setIsModalOpen }) {\n  return (\n    <ul className=\"CardCompanyList\">\n      {CARD_COMPANY_LIST.map((company, index) => (\n        <CardCompanyItem key={index} company={company} setCardInfo={setCardInfo} setIsModalOpen={setIsModalOpen} />\n      ))}\n    </ul>\n  );\n}\n\nfunction CardCompanyItem({ company, setCardInfo, setIsModalOpen }) {\n  const { name, color } = company;\n\n  return (\n    <li className=\"CardCompanyItem\">\n      <Button\n        name={name}\n        backgroundColor={color}\n        theme=\"card-company\"\n        onClick={(e) => handleCardCompanySelect({ e, setCardInfo, setIsModalOpen })}\n      />\n      <Label>{name}</Label>\n    </li>\n  );\n}\n","export const handleCardCompanySelect = ({ e, setCardInfo, setIsModalOpen }) => {\n  const name = e.target.name;\n  const color = e.target.style.backgroundColor;\n\n  setCardInfo((prevState) => ({ ...prevState, company: { name, color } }));\n  setIsModalOpen(false);\n};\n\nexport const handleDimmedAreaClick = ({ e, setIsModalOpen }) => {\n  const Modal = e.currentTarget;\n  const ModalViewPort = Modal.firstChild;\n\n  if (e.target === Modal || e.target === ModalViewPort) {\n    setIsModalOpen(false);\n  }\n};\n","import { useState } from 'react';\nimport { Button, Card, CreditCard, Title } from '../../../components';\nimport { CardInfoForm } from './CardInfoForm';\nimport { CardCompanySelectModal } from './CardCompanySelectModal';\nimport { getFormattedCardInfo } from '../../../cardInfoFormatter';\nimport './style.css';\n\nexport const AddFormPage = (props) => {\n  const { setRoute, initialCardInfo, cardInfo, setCardInfo } = props;\n  const { formattedNumber, formattedExpirationDate, formattedOwnerName } = getFormattedCardInfo({ cardInfo });\n  const { company } = cardInfo;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className=\"AddFormPage\">\n      <div className=\"AddFormPage__Title\">\n        <BackwardButton />\n        <Title>카드 추가</Title>\n      </div>\n      <CreditCardPreview\n        companyColor={company.color}\n        companyName={company.name}\n        formattedNumber={formattedNumber}\n        formattedExpirationDate={formattedExpirationDate}\n        formattedOwnerName={formattedOwnerName}\n      />\n      <CardInfoForm\n        setRoute={setRoute}\n        initialCardInfo={initialCardInfo}\n        cardInfo={cardInfo}\n        setCardInfo={setCardInfo}\n        setIsModalOpen={setIsModalOpen}\n      />\n      <CardCompanySelectModal isOpen={isModalOpen} setIsModalOpen={setIsModalOpen} setCardInfo={setCardInfo} />\n    </div>\n  );\n};\n\nfunction CreditCardPreview(props) {\n  const { companyColor, companyName, formattedNumber, formattedExpirationDate, formattedOwnerName } = props;\n\n  return (\n    <div className=\"CreditCardPreview\">\n      <Card backgroundColor={companyColor} boxShadow size=\"medium\">\n        <CreditCard\n          company={companyName}\n          cardNumber={formattedNumber}\n          expirationDate={formattedExpirationDate}\n          ownerName={formattedOwnerName}\n        />\n      </Card>\n    </div>\n  );\n}\n\nfunction BackwardButton() {\n  const size = 16;\n  const color = '#525252';\n\n  return (\n    <Button theme=\"backward\" onClick={() => {}}>\n      <svg viewBox={`0 0 ${size} ${size}`} height={size} width={size} fill=\"none\">\n        <path d=\"M8.30426 1L1.36476 8.78658L9.15134 15.7261\" stroke={color} strokeWidth=\"1.5\" />\n      </svg>\n    </Button>\n  );\n}\n","import { useState } from 'react';\nimport { AddCompletePage } from './AddCompletePage';\nimport { AddFormPage } from './AddFormPage';\nimport { PAGE } from '../../constants';\n\nconst initialCardInfo = {\n  number: { first: '', second: '', third: '', fourth: '' },\n  company: { name: '', color: '' },\n  expirationDate: { month: '', year: '' },\n  ownerName: '',\n  isOwnerNameFilled: false,\n  securityCode: '',\n  password: { first: '', second: '' },\n  nickname: '',\n};\n\nexport const AddCardPage = (props) => {\n  const { route, setRoute, addCardInfoToList } = props;\n  const [cardInfo, setCardInfo] = useState(initialCardInfo);\n\n  return (\n    <>\n      {route === PAGE.ADD_CARD_FORM ? (\n        <AddFormPage\n          setRoute={setRoute}\n          initialCardInfo={initialCardInfo}\n          cardInfo={cardInfo}\n          setCardInfo={setCardInfo}\n        />\n      ) : (\n        <AddCompletePage\n          setRoute={setRoute}\n          initialCardInfo={initialCardInfo}\n          cardInfo={cardInfo}\n          setCardInfo={setCardInfo}\n          addCardInfoToList={addCardInfoToList}\n        />\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { CardListPage } from './pages/CardListPage';\nimport { AddCardPage } from './pages/AddCardPages';\nimport { PAGE } from './constants';\n\nexport default function App() {\n  const [route, setRoute] = useState(PAGE.CARD_LIST);\n  const [cardList, setCardList] = useState([]);\n  const addCardInfoToList = (cardInfo) => setCardList((prevList) => [...prevList, cardInfo]);\n\n  return (\n    <div className=\"App\">\n      {route === PAGE.CARD_LIST ? (\n        <CardListPage cardList={cardList} setRoute={setRoute} />\n      ) : (\n        <AddCardPage addCardInfoToList={addCardInfoToList} route={route} setRoute={setRoute} />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}